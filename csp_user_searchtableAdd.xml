<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for UNIX (Ubuntu Server LTS for x86-64 Containers) 2025.1 (Build 223U)" ts="2025-07-24 05:55:40">
<CSP name="all.min.css" application="/csp/user/" default="1"><![CDATA[
/*!
 * Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2023 Fonticons, Inc.
 */
.fa{font-family:var(--fa-style-family,"Font Awesome 6 Free");font-weight:var(--fa-style,900)}.fa,.fa-brands,.fa-classic,.fa-regular,.fa-sharp,.fa-solid,.fab,.far,.fas{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:var(--fa-display,inline-block);font-style:normal;font-variant:normal;line-height:1;text-rendering:auto}.fa-classic,.fa-regular,.fa-solid,.far,.fas{font-family:"Font Awesome 6 Free"}.fa-brands,.fab{font-family:"Font Awesome 6 Brands"}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-2xs{font-size:.625em;line-height:.1em;vertical-align:.225em}.fa-xs{font-size:.75em;line-height:.08333em;vertical-align:.125em}.fa-sm{font-size:.875em;line-height:.07143em;vertical-align:.05357em}.fa-lg{font-size:1.25em;line-height:.05em;vertical-align:-.075em}.fa-xl{font-size:1.5em;line-height:.04167em;vertical-align:-.125em}.fa-2xl{font-size:2em;line-height:.03125em;vertical-align:-.1875em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:var(--fa-li-margin,2.5em);padding-left:0}.fa-ul>li{position:relative}.fa-li{left:calc(var(--fa-li-width, 2em)*-1);position:absolute;text-align:center;width:var(--fa-li-width,2em);line-height:inherit}.fa-border{border-radius:var(--fa-border-radius,.1em);border:var(--fa-border-width,.08em) var(--fa-border-style,solid) var(--fa-border-color,#eee);padding:var(--fa-border-padding,.2em .25em .15em)}.fa-pull-left{float:left;margin-right:var(--fa-pull-margin,.3em)}.fa-pull-right{float:right;margin-left:var(--fa-pull-margin,.3em)}.fa-beat{-webkit-animation-name:fa-beat;animation-name:fa-beat;-webkit-animation-delay:var(--fa-animation-delay,0s);animation-delay:var(--fa-animation-delay,0s);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,ease-in-out);animation-timing-function:var(--fa-animation-timing,ease-in-out)}.fa-bounce{-webkit-animation-name:fa-bounce;animation-name:fa-bounce;-webkit-animation-delay:var(--fa-animation-delay,0s);animation-delay:var(--fa-animation-delay,0s);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,cubic-bezier(.28,.84,.42,1));animation-timing-function:var(--fa-animation-timing,cubic-bezier(.28,.84,.42,1))}.fa-fade{-webkit-animation-name:fa-fade;animation-name:fa-fade;-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1));animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1))}.fa-beat-fade,.fa-fade{-webkit-animation-delay:var(--fa-animation-delay,0s);animation-delay:var(--fa-animation-delay,0s);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s)}.fa-beat-fade{-webkit-animation-name:fa-beat-fade;animation-name:fa-beat-fade;-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1));animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1))}.fa-flip{-webkit-animation-name:fa-flip;animation-name:fa-flip;-webkit-animation-delay:var(--fa-animation-delay,0s);animation-delay:var(--fa-animation-delay,0s);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,ease-in-out);animation-timing-function:var(--fa-animation-timing,ease-in-out)}.fa-shake{-webkit-animation-name:fa-shake;animation-name:fa-shake;-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,linear);animation-timing-function:var(--fa-animation-timing,linear)}.fa-shake,.fa-spin{-webkit-animation-delay:var(--fa-animation-delay,0s);animation-delay:var(--fa-animation-delay,0s);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal)}.fa-spin{-webkit-animation-name:fa-spin;animation-name:fa-spin;-webkit-animation-duration:var(--fa-animation-duration,2s);animation-duration:var(--fa-animation-duration,2s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,linear);animation-timing-function:var(--fa-animation-timing,linear)}.fa-spin-reverse{--fa-animation-direction:reverse}.fa-pulse,.fa-spin-pulse{-webkit-animation-name:fa-spin;animation-name:fa-spin;-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,steps(8));animation-timing-function:var(--fa-animation-timing,steps(8))}@media (prefers-reduced-motion:reduce){.fa-beat,.fa-beat-fade,.fa-bounce,.fa-fade,.fa-flip,.fa-pulse,.fa-shake,.fa-spin,.fa-spin-pulse{-webkit-animation-delay:-1ms;animation-delay:-1ms;-webkit-animation-duration:1ms;animation-duration:1ms;-webkit-animation-iteration-count:1;animation-iteration-count:1;-webkit-transition-delay:0s;transition-delay:0s;-webkit-transition-duration:0s;transition-duration:0s}}@-webkit-keyframes fa-beat{0%,90%{-webkit-transform:scale(1);transform:scale(1)}45%{-webkit-transform:scale(var(--fa-beat-scale,1.25));transform:scale(var(--fa-beat-scale,1.25))}}@keyframes fa-beat{0%,90%{-webkit-transform:scale(1);transform:scale(1)}45%{-webkit-transform:scale(var(--fa-beat-scale,1.25));transform:scale(var(--fa-beat-scale,1.25))}}@-webkit-keyframes fa-bounce{0%{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}10%{-webkit-transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0);transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0)}30%{-webkit-transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em));transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em))}50%{-webkit-transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0);transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0)}57%{-webkit-transform:scale(1) translateY(var(--fa-bounce-rebound,-.125em));transform:scale(1) translateY(var(--fa-bounce-rebound,-.125em))}64%{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}to{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}}@keyframes fa-bounce{0%{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}10%{-webkit-transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0);transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0)}30%{-webkit-transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em));transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em))}50%{-webkit-transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0);transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0)}57%{-webkit-transform:scale(1) translateY(var(--fa-bounce-rebound,-.125em));transform:scale(1) translateY(var(--fa-bounce-rebound,-.125em))}64%{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}to{-webkit-transform:scale(1) translateY(0);transform:scale(1) translateY(0)}}@-webkit-keyframes fa-fade{50%{opacity:var(--fa-fade-opacity,.4)}}@keyframes fa-fade{50%{opacity:var(--fa-fade-opacity,.4)}}@-webkit-keyframes fa-beat-fade{0%,to{opacity:var(--fa-beat-fade-opacity,.4);-webkit-transform:scale(1);transform:scale(1)}50%{opacity:1;-webkit-transform:scale(var(--fa-beat-fade-scale,1.125));transform:scale(var(--fa-beat-fade-scale,1.125))}}@keyframes fa-beat-fade{0%,to{opacity:var(--fa-beat-fade-opacity,.4);-webkit-transform:scale(1);transform:scale(1)}50%{opacity:1;-webkit-transform:scale(var(--fa-beat-fade-scale,1.125));transform:scale(var(--fa-beat-fade-scale,1.125))}}@-webkit-keyframes fa-flip{50%{-webkit-transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg));transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg))}}@keyframes fa-flip{50%{-webkit-transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg));transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg))}}@-webkit-keyframes fa-shake{0%{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}4%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}8%,24%{-webkit-transform:rotate(-18deg);transform:rotate(-18deg)}12%,28%{-webkit-transform:rotate(18deg);transform:rotate(18deg)}16%{-webkit-transform:rotate(-22deg);transform:rotate(-22deg)}20%{-webkit-transform:rotate(22deg);transform:rotate(22deg)}32%{-webkit-transform:rotate(-12deg);transform:rotate(-12deg)}36%{-webkit-transform:rotate(12deg);transform:rotate(12deg)}40%,to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes fa-shake{0%{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}4%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}8%,24%{-webkit-transform:rotate(-18deg);transform:rotate(-18deg)}12%,28%{-webkit-transform:rotate(18deg);transform:rotate(18deg)}16%{-webkit-transform:rotate(-22deg);transform:rotate(-22deg)}20%{-webkit-transform:rotate(22deg);transform:rotate(22deg)}32%{-webkit-transform:rotate(-12deg);transform:rotate(-12deg)}36%{-webkit-transform:rotate(12deg);transform:rotate(12deg)}40%,to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scaleX(-1);transform:scaleX(-1)}.fa-flip-vertical{-webkit-transform:scaleY(-1);transform:scaleY(-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1);transform:scale(-1)}.fa-rotate-by{-webkit-transform:rotate(var(--fa-rotate-angle,none));transform:rotate(var(--fa-rotate-angle,none))}.fa-stack{display:inline-block;height:2em;line-height:2em;position:relative;vertical-align:middle;width:2.5em}.fa-stack-1x,.fa-stack-2x{left:0;position:absolute;text-align:center;width:100%;z-index:var(--fa-stack-z-index,auto)}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:var(--fa-inverse,#fff)}

.fa-0:before{content:"\30"}.fa-1:before{content:"\31"}.fa-2:before{content:"\32"}.fa-3:before{content:"\33"}.fa-4:before{content:"\34"}.fa-5:before{content:"\35"}.fa-6:before{content:"\36"}.fa-7:before{content:"\37"}.fa-8:before{content:"\38"}.fa-9:before{content:"\39"}.fa-fill-drip:before{content:"\f576"}.fa-arrows-to-circle:before{content:"\e4bd"}.fa-chevron-circle-right:before,.fa-circle-chevron-right:before{content:"\f138"}.fa-at:before{content:"\40"}.fa-trash-alt:before,.fa-trash-can:before{content:"\f2ed"}.fa-text-height:before{content:"\f034"}.fa-user-times:before,.fa-user-xmark:before{content:"\f235"}.fa-stethoscope:before{content:"\f0f1"}.fa-comment-alt:before,.fa-message:before{content:"\f27a"}.fa-info:before{content:"\f129"}.fa-compress-alt:before,.fa-down-left-and-up-right-to-center:before{content:"\f422"}.fa-explosion:before{content:"\e4e9"}.fa-file-alt:before,.fa-file-lines:before,.fa-file-text:before{content:"\f15c"}.fa-wave-square:before{content:"\f83e"}.fa-ring:before{content:"\f70b"}.fa-building-un:before{content:"\e4d9"}.fa-dice-three:before{content:"\f527"}.fa-calendar-alt:before,.fa-calendar-days:before{content:"\f073"}.fa-anchor-circle-check:before{content:"\e4aa"}.fa-building-circle-arrow-right:before{content:"\e4d1"}.fa-volleyball-ball:before,.fa-volleyball:before{content:"\f45f"}.fa-arrows-up-to-line:before{content:"\e4c2"}.fa-sort-desc:before,.fa-sort-down:before{content:"\f0dd"}.fa-circle-minus:before,.fa-minus-circle:before{content:"\f056"}.fa-door-open:before{content:"\f52b"}.fa-right-from-bracket:before,.fa-sign-out-alt:before{content:"\f2f5"}.fa-atom:before{content:"\f5d2"}.fa-soap:before{content:"\e06e"}.fa-heart-music-camera-bolt:before,.fa-icons:before{content:"\f86d"}.fa-microphone-alt-slash:before,.fa-microphone-lines-slash:before{content:"\f539"}.fa-bridge-circle-check:before{content:"\e4c9"}.fa-pump-medical:before{content:"\e06a"}.fa-fingerprint:before{content:"\f577"}.fa-hand-point-right:before{content:"\f0a4"}.fa-magnifying-glass-location:before,.fa-search-location:before{content:"\f689"}.fa-forward-step:before,.fa-step-forward:before{content:"\f051"}.fa-face-smile-beam:before,.fa-smile-beam:before{content:"\f5b8"}.fa-flag-checkered:before{content:"\f11e"}.fa-football-ball:before,.fa-football:before{content:"\f44e"}.fa-school-circle-exclamation:before{content:"\e56c"}.fa-crop:before{content:"\f125"}.fa-angle-double-down:before,.fa-angles-down:before{content:"\f103"}.fa-users-rectangle:before{content:"\e594"}.fa-people-roof:before{content:"\e537"}.fa-people-line:before{content:"\e534"}.fa-beer-mug-empty:before,.fa-beer:before{content:"\f0fc"}.fa-diagram-predecessor:before{content:"\e477"}.fa-arrow-up-long:before,.fa-long-arrow-up:before{content:"\f176"}.fa-burn:before,.fa-fire-flame-simple:before{content:"\f46a"}.fa-male:before,.fa-person:before{content:"\f183"}.fa-laptop:before{content:"\f109"}.fa-file-csv:before{content:"\f6dd"}.fa-menorah:before{content:"\f676"}.fa-truck-plane:before{content:"\e58f"}.fa-record-vinyl:before{content:"\f8d9"}.fa-face-grin-stars:before,.fa-grin-stars:before{content:"\f587"}.fa-bong:before{content:"\f55c"}.fa-pastafarianism:before,.fa-spaghetti-monster-flying:before{content:"\f67b"}.fa-arrow-down-up-across-line:before{content:"\e4af"}.fa-spoon:before,.fa-utensil-spoon:before{content:"\f2e5"}.fa-jar-wheat:before{content:"\e517"}.fa-envelopes-bulk:before,.fa-mail-bulk:before{content:"\f674"}.fa-file-circle-exclamation:before{content:"\e4eb"}.fa-circle-h:before,.fa-hospital-symbol:before{content:"\f47e"}.fa-pager:before{content:"\f815"}.fa-address-book:before,.fa-contact-book:before{content:"\f2b9"}.fa-strikethrough:before{content:"\f0cc"}.fa-k:before{content:"\4b"}.fa-landmark-flag:before{content:"\e51c"}.fa-pencil-alt:before,.fa-pencil:before{content:"\f303"}.fa-backward:before{content:"\f04a"}.fa-caret-right:before{content:"\f0da"}.fa-comments:before{content:"\f086"}.fa-file-clipboard:before,.fa-paste:before{content:"\f0ea"}.fa-code-pull-request:before{content:"\e13c"}.fa-clipboard-list:before{content:"\f46d"}.fa-truck-loading:before,.fa-truck-ramp-box:before{content:"\f4de"}.fa-user-check:before{content:"\f4fc"}.fa-vial-virus:before{content:"\e597"}.fa-sheet-plastic:before{content:"\e571"}.fa-blog:before{content:"\f781"}.fa-user-ninja:before{content:"\f504"}.fa-person-arrow-up-from-line:before{content:"\e539"}.fa-scroll-torah:before,.fa-torah:before{content:"\f6a0"}.fa-broom-ball:before,.fa-quidditch-broom-ball:before,.fa-quidditch:before{content:"\f458"}.fa-toggle-off:before{content:"\f204"}.fa-archive:before,.fa-box-archive:before{content:"\f187"}.fa-person-drowning:before{content:"\e545"}.fa-arrow-down-9-1:before,.fa-sort-numeric-desc:before,.fa-sort-numeric-down-alt:before{content:"\f886"}.fa-face-grin-tongue-squint:before,.fa-grin-tongue-squint:before{content:"\f58a"}.fa-spray-can:before{content:"\f5bd"}.fa-truck-monster:before{content:"\f63b"}.fa-w:before{content:"\57"}.fa-earth-africa:before,.fa-globe-africa:before{content:"\f57c"}.fa-rainbow:before{content:"\f75b"}.fa-circle-notch:before{content:"\f1ce"}.fa-tablet-alt:before,.fa-tablet-screen-button:before{content:"\f3fa"}.fa-paw:before{content:"\f1b0"}.fa-cloud:before{content:"\f0c2"}.fa-trowel-bricks:before{content:"\e58a"}.fa-face-flushed:before,.fa-flushed:before{content:"\f579"}.fa-hospital-user:before{content:"\f80d"}.fa-tent-arrow-left-right:before{content:"\e57f"}.fa-gavel:before,.fa-legal:before{content:"\f0e3"}.fa-binoculars:before{content:"\f1e5"}.fa-microphone-slash:before{content:"\f131"}.fa-box-tissue:before{content:"\e05b"}.fa-motorcycle:before{content:"\f21c"}.fa-bell-concierge:before,.fa-concierge-bell:before{content:"\f562"}.fa-pen-ruler:before,.fa-pencil-ruler:before{content:"\f5ae"}.fa-people-arrows-left-right:before,.fa-people-arrows:before{content:"\e068"}.fa-mars-and-venus-burst:before{content:"\e523"}.fa-caret-square-right:before,.fa-square-caret-right:before{content:"\f152"}.fa-cut:before,.fa-scissors:before{content:"\f0c4"}.fa-sun-plant-wilt:before{content:"\e57a"}.fa-toilets-portable:before{content:"\e584"}.fa-hockey-puck:before{content:"\f453"}.fa-table:before{content:"\f0ce"}.fa-magnifying-glass-arrow-right:before{content:"\e521"}.fa-digital-tachograph:before,.fa-tachograph-digital:before{content:"\f566"}.fa-users-slash:before{content:"\e073"}.fa-clover:before{content:"\e139"}.fa-mail-reply:before,.fa-reply:before{content:"\f3e5"}.fa-star-and-crescent:before{content:"\f699"}.fa-house-fire:before{content:"\e50c"}.fa-minus-square:before,.fa-square-minus:before{content:"\f146"}.fa-helicopter:before{content:"\f533"}.fa-compass:before{content:"\f14e"}.fa-caret-square-down:before,.fa-square-caret-down:before{content:"\f150"}.fa-file-circle-question:before{content:"\e4ef"}.fa-laptop-code:before{content:"\f5fc"}.fa-swatchbook:before{content:"\f5c3"}.fa-prescription-bottle:before{content:"\f485"}.fa-bars:before,.fa-navicon:before{content:"\f0c9"}.fa-people-group:before{content:"\e533"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:"\f253"}.fa-heart-broken:before,.fa-heart-crack:before{content:"\f7a9"}.fa-external-link-square-alt:before,.fa-square-up-right:before{content:"\f360"}.fa-face-kiss-beam:before,.fa-kiss-beam:before{content:"\f597"}.fa-film:before{content:"\f008"}.fa-ruler-horizontal:before{content:"\f547"}.fa-people-robbery:before{content:"\e536"}.fa-lightbulb:before{content:"\f0eb"}.fa-caret-left:before{content:"\f0d9"}.fa-circle-exclamation:before,.fa-exclamation-circle:before{content:"\f06a"}.fa-school-circle-xmark:before{content:"\e56d"}.fa-arrow-right-from-bracket:before,.fa-sign-out:before{content:"\f08b"}.fa-chevron-circle-down:before,.fa-circle-chevron-down:before{content:"\f13a"}.fa-unlock-alt:before,.fa-unlock-keyhole:before{content:"\f13e"}.fa-cloud-showers-heavy:before{content:"\f740"}.fa-headphones-alt:before,.fa-headphones-simple:before{content:"\f58f"}.fa-sitemap:before{content:"\f0e8"}.fa-circle-dollar-to-slot:before,.fa-donate:before{content:"\f4b9"}.fa-memory:before{content:"\f538"}.fa-road-spikes:before{content:"\e568"}.fa-fire-burner:before{content:"\e4f1"}.fa-flag:before{content:"\f024"}.fa-hanukiah:before{content:"\f6e6"}.fa-feather:before{content:"\f52d"}.fa-volume-down:before,.fa-volume-low:before{content:"\f027"}.fa-comment-slash:before{content:"\f4b3"}.fa-cloud-sun-rain:before{content:"\f743"}.fa-compress:before{content:"\f066"}.fa-wheat-alt:before,.fa-wheat-awn:before{content:"\e2cd"}.fa-ankh:before{content:"\f644"}.fa-hands-holding-child:before{content:"\e4fa"}.fa-asterisk:before{content:"\2a"}.fa-check-square:before,.fa-square-check:before{content:"\f14a"}.fa-peseta-sign:before{content:"\e221"}.fa-header:before,.fa-heading:before{content:"\f1dc"}.fa-ghost:before{content:"\f6e2"}.fa-list-squares:before,.fa-list:before{content:"\f03a"}.fa-phone-square-alt:before,.fa-square-phone-flip:before{content:"\f87b"}.fa-cart-plus:before{content:"\f217"}.fa-gamepad:before{content:"\f11b"}.fa-circle-dot:before,.fa-dot-circle:before{content:"\f192"}.fa-dizzy:before,.fa-face-dizzy:before{content:"\f567"}.fa-egg:before{content:"\f7fb"}.fa-house-medical-circle-xmark:before{content:"\e513"}.fa-campground:before{content:"\f6bb"}.fa-folder-plus:before{content:"\f65e"}.fa-futbol-ball:before,.fa-futbol:before,.fa-soccer-ball:before{content:"\f1e3"}.fa-paint-brush:before,.fa-paintbrush:before{content:"\f1fc"}.fa-lock:before{content:"\f023"}.fa-gas-pump:before{content:"\f52f"}.fa-hot-tub-person:before,.fa-hot-tub:before{content:"\f593"}.fa-map-location:before,.fa-map-marked:before{content:"\f59f"}.fa-house-flood-water:before{content:"\e50e"}.fa-tree:before{content:"\f1bb"}.fa-bridge-lock:before{content:"\e4cc"}.fa-sack-dollar:before{content:"\f81d"}.fa-edit:before,.fa-pen-to-square:before{content:"\f044"}.fa-car-side:before{content:"\f5e4"}.fa-share-alt:before,.fa-share-nodes:before{content:"\f1e0"}.fa-heart-circle-minus:before{content:"\e4ff"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:"\f252"}.fa-microscope:before{content:"\f610"}.fa-sink:before{content:"\e06d"}.fa-bag-shopping:before,.fa-shopping-bag:before{content:"\f290"}.fa-arrow-down-z-a:before,.fa-sort-alpha-desc:before,.fa-sort-alpha-down-alt:before{content:"\f881"}.fa-mitten:before{content:"\f7b5"}.fa-person-rays:before{content:"\e54d"}.fa-users:before{content:"\f0c0"}.fa-eye-slash:before{content:"\f070"}.fa-flask-vial:before{content:"\e4f3"}.fa-hand-paper:before,.fa-hand:before{content:"\f256"}.fa-om:before{content:"\f679"}.fa-worm:before{content:"\e599"}.fa-house-circle-xmark:before{content:"\e50b"}.fa-plug:before{content:"\f1e6"}.fa-chevron-up:before{content:"\f077"}.fa-hand-spock:before{content:"\f259"}.fa-stopwatch:before{content:"\f2f2"}.fa-face-kiss:before,.fa-kiss:before{content:"\f596"}.fa-bridge-circle-xmark:before{content:"\e4cb"}.fa-face-grin-tongue:before,.fa-grin-tongue:before{content:"\f589"}.fa-chess-bishop:before{content:"\f43a"}.fa-face-grin-wink:before,.fa-grin-wink:before{content:"\f58c"}.fa-deaf:before,.fa-deafness:before,.fa-ear-deaf:before,.fa-hard-of-hearing:before{content:"\f2a4"}.fa-road-circle-check:before{content:"\e564"}.fa-dice-five:before{content:"\f523"}.fa-rss-square:before,.fa-square-rss:before{content:"\f143"}.fa-land-mine-on:before{content:"\e51b"}.fa-i-cursor:before{content:"\f246"}.fa-stamp:before{content:"\f5bf"}.fa-stairs:before{content:"\e289"}.fa-i:before{content:"\49"}.fa-hryvnia-sign:before,.fa-hryvnia:before{content:"\f6f2"}.fa-pills:before{content:"\f484"}.fa-face-grin-wide:before,.fa-grin-alt:before{content:"\f581"}.fa-tooth:before{content:"\f5c9"}.fa-v:before{content:"\56"}.fa-bangladeshi-taka-sign:before{content:"\e2e6"}.fa-bicycle:before{content:"\f206"}.fa-rod-asclepius:before,.fa-rod-snake:before,.fa-staff-aesculapius:before,.fa-staff-snake:before{content:"\e579"}.fa-head-side-cough-slash:before{content:"\e062"}.fa-ambulance:before,.fa-truck-medical:before{content:"\f0f9"}.fa-wheat-awn-circle-exclamation:before{content:"\e598"}.fa-snowman:before{content:"\f7d0"}.fa-mortar-pestle:before{content:"\f5a7"}.fa-road-barrier:before{content:"\e562"}.fa-school:before{content:"\f549"}.fa-igloo:before{content:"\f7ae"}.fa-joint:before{content:"\f595"}.fa-angle-right:before{content:"\f105"}.fa-horse:before{content:"\f6f0"}.fa-q:before{content:"\51"}.fa-g:before{content:"\47"}.fa-notes-medical:before{content:"\f481"}.fa-temperature-2:before,.fa-temperature-half:before,.fa-thermometer-2:before,.fa-thermometer-half:before{content:"\f2c9"}.fa-dong-sign:before{content:"\e169"}.fa-capsules:before{content:"\f46b"}.fa-poo-bolt:before,.fa-poo-storm:before{content:"\f75a"}.fa-face-frown-open:before,.fa-frown-open:before{content:"\f57a"}.fa-hand-point-up:before{content:"\f0a6"}.fa-money-bill:before{content:"\f0d6"}.fa-bookmark:before{content:"\f02e"}.fa-align-justify:before{content:"\f039"}.fa-umbrella-beach:before{content:"\f5ca"}.fa-helmet-un:before{content:"\e503"}.fa-bullseye:before{content:"\f140"}.fa-bacon:before{content:"\f7e5"}.fa-hand-point-down:before{content:"\f0a7"}.fa-arrow-up-from-bracket:before{content:"\e09a"}.fa-folder-blank:before,.fa-folder:before{content:"\f07b"}.fa-file-medical-alt:before,.fa-file-waveform:before{content:"\f478"}.fa-radiation:before{content:"\f7b9"}.fa-chart-simple:before{content:"\e473"}.fa-mars-stroke:before{content:"\f229"}.fa-vial:before{content:"\f492"}.fa-dashboard:before,.fa-gauge-med:before,.fa-gauge:before,.fa-tachometer-alt-average:before{content:"\f624"}.fa-magic-wand-sparkles:before,.fa-wand-magic-sparkles:before{content:"\e2ca"}.fa-e:before{content:"\45"}.fa-pen-alt:before,.fa-pen-clip:before{content:"\f305"}.fa-bridge-circle-exclamation:before{content:"\e4ca"}.fa-user:before{content:"\f007"}.fa-school-circle-check:before{content:"\e56b"}.fa-dumpster:before{content:"\f793"}.fa-shuttle-van:before,.fa-van-shuttle:before{content:"\f5b6"}.fa-building-user:before{content:"\e4da"}.fa-caret-square-left:before,.fa-square-caret-left:before{content:"\f191"}.fa-highlighter:before{content:"\f591"}.fa-key:before{content:"\f084"}.fa-bullhorn:before{content:"\f0a1"}.fa-globe:before{content:"\f0ac"}.fa-synagogue:before{content:"\f69b"}.fa-person-half-dress:before{content:"\e548"}.fa-road-bridge:before{content:"\e563"}.fa-location-arrow:before{content:"\f124"}.fa-c:before{content:"\43"}.fa-tablet-button:before{content:"\f10a"}.fa-building-lock:before{content:"\e4d6"}.fa-pizza-slice:before{content:"\f818"}.fa-money-bill-wave:before{content:"\f53a"}.fa-area-chart:before,.fa-chart-area:before{content:"\f1fe"}.fa-house-flag:before{content:"\e50d"}.fa-person-circle-minus:before{content:"\e540"}.fa-ban:before,.fa-cancel:before{content:"\f05e"}.fa-camera-rotate:before{content:"\e0d8"}.fa-air-freshener:before,.fa-spray-can-sparkles:before{content:"\f5d0"}.fa-star:before{content:"\f005"}.fa-repeat:before{content:"\f363"}.fa-cross:before{content:"\f654"}.fa-box:before{content:"\f466"}.fa-venus-mars:before{content:"\f228"}.fa-arrow-pointer:before,.fa-mouse-pointer:before{content:"\f245"}.fa-expand-arrows-alt:before,.fa-maximize:before{content:"\f31e"}.fa-charging-station:before{content:"\f5e7"}.fa-shapes:before,.fa-triangle-circle-square:before{content:"\f61f"}.fa-random:before,.fa-shuffle:before{content:"\f074"}.fa-person-running:before,.fa-running:before{content:"\f70c"}.fa-mobile-retro:before{content:"\e527"}.fa-grip-lines-vertical:before{content:"\f7a5"}.fa-spider:before{content:"\f717"}.fa-hands-bound:before{content:"\e4f9"}.fa-file-invoice-dollar:before{content:"\f571"}.fa-plane-circle-exclamation:before{content:"\e556"}.fa-x-ray:before{content:"\f497"}.fa-spell-check:before{content:"\f891"}.fa-slash:before{content:"\f715"}.fa-computer-mouse:before,.fa-mouse:before{content:"\f8cc"}.fa-arrow-right-to-bracket:before,.fa-sign-in:before{content:"\f090"}.fa-shop-slash:before,.fa-store-alt-slash:before{content:"\e070"}.fa-server:before{content:"\f233"}.fa-virus-covid-slash:before{content:"\e4a9"}.fa-shop-lock:before{content:"\e4a5"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:"\f251"}.fa-blender-phone:before{content:"\f6b6"}.fa-building-wheat:before{content:"\e4db"}.fa-person-breastfeeding:before{content:"\e53a"}.fa-right-to-bracket:before,.fa-sign-in-alt:before{content:"\f2f6"}.fa-venus:before{content:"\f221"}.fa-passport:before{content:"\f5ab"}.fa-heart-pulse:before,.fa-heartbeat:before{content:"\f21e"}.fa-people-carry-box:before,.fa-people-carry:before{content:"\f4ce"}.fa-temperature-high:before{content:"\f769"}.fa-microchip:before{content:"\f2db"}.fa-crown:before{content:"\f521"}.fa-weight-hanging:before{content:"\f5cd"}.fa-xmarks-lines:before{content:"\e59a"}.fa-file-prescription:before{content:"\f572"}.fa-weight-scale:before,.fa-weight:before{content:"\f496"}.fa-user-friends:before,.fa-user-group:before{content:"\f500"}.fa-arrow-up-a-z:before,.fa-sort-alpha-up:before{content:"\f15e"}.fa-chess-knight:before{content:"\f441"}.fa-face-laugh-squint:before,.fa-laugh-squint:before{content:"\f59b"}.fa-wheelchair:before{content:"\f193"}.fa-arrow-circle-up:before,.fa-circle-arrow-up:before{content:"\f0aa"}.fa-toggle-on:before{content:"\f205"}.fa-person-walking:before,.fa-walking:before{content:"\f554"}.fa-l:before{content:"\4c"}.fa-fire:before{content:"\f06d"}.fa-bed-pulse:before,.fa-procedures:before{content:"\f487"}.fa-shuttle-space:before,.fa-space-shuttle:before{content:"\f197"}.fa-face-laugh:before,.fa-laugh:before{content:"\f599"}.fa-folder-open:before{content:"\f07c"}.fa-heart-circle-plus:before{content:"\e500"}.fa-code-fork:before{content:"\e13b"}.fa-city:before{content:"\f64f"}.fa-microphone-alt:before,.fa-microphone-lines:before{content:"\f3c9"}.fa-pepper-hot:before{content:"\f816"}.fa-unlock:before{content:"\f09c"}.fa-colon-sign:before{content:"\e140"}.fa-headset:before{content:"\f590"}.fa-store-slash:before{content:"\e071"}.fa-road-circle-xmark:before{content:"\e566"}.fa-user-minus:before{content:"\f503"}.fa-mars-stroke-up:before,.fa-mars-stroke-v:before{content:"\f22a"}.fa-champagne-glasses:before,.fa-glass-cheers:before{content:"\f79f"}.fa-clipboard:before{content:"\f328"}.fa-house-circle-exclamation:before{content:"\e50a"}.fa-file-arrow-up:before,.fa-file-upload:before{content:"\f574"}.fa-wifi-3:before,.fa-wifi-strong:before,.fa-wifi:before{content:"\f1eb"}.fa-bath:before,.fa-bathtub:before{content:"\f2cd"}.fa-underline:before{content:"\f0cd"}.fa-user-edit:before,.fa-user-pen:before{content:"\f4ff"}.fa-signature:before{content:"\f5b7"}.fa-stroopwafel:before{content:"\f551"}.fa-bold:before{content:"\f032"}.fa-anchor-lock:before{content:"\e4ad"}.fa-building-ngo:before{content:"\e4d7"}.fa-manat-sign:before{content:"\e1d5"}.fa-not-equal:before{content:"\f53e"}.fa-border-style:before,.fa-border-top-left:before{content:"\f853"}.fa-map-location-dot:before,.fa-map-marked-alt:before{content:"\f5a0"}.fa-jedi:before{content:"\f669"}.fa-poll:before,.fa-square-poll-vertical:before{content:"\f681"}.fa-mug-hot:before{content:"\f7b6"}.fa-battery-car:before,.fa-car-battery:before{content:"\f5df"}.fa-gift:before{content:"\f06b"}.fa-dice-two:before{content:"\f528"}.fa-chess-queen:before{content:"\f445"}.fa-glasses:before{content:"\f530"}.fa-chess-board:before{content:"\f43c"}.fa-building-circle-check:before{content:"\e4d2"}.fa-person-chalkboard:before{content:"\e53d"}.fa-mars-stroke-h:before,.fa-mars-stroke-right:before{content:"\f22b"}.fa-hand-back-fist:before,.fa-hand-rock:before{content:"\f255"}.fa-caret-square-up:before,.fa-square-caret-up:before{content:"\f151"}.fa-cloud-showers-water:before{content:"\e4e4"}.fa-bar-chart:before,.fa-chart-bar:before{content:"\f080"}.fa-hands-bubbles:before,.fa-hands-wash:before{content:"\e05e"}.fa-less-than-equal:before{content:"\f537"}.fa-train:before{content:"\f238"}.fa-eye-low-vision:before,.fa-low-vision:before{content:"\f2a8"}.fa-crow:before{content:"\f520"}.fa-sailboat:before{content:"\e445"}.fa-window-restore:before{content:"\f2d2"}.fa-plus-square:before,.fa-square-plus:before{content:"\f0fe"}.fa-torii-gate:before{content:"\f6a1"}.fa-frog:before{content:"\f52e"}.fa-bucket:before{content:"\e4cf"}.fa-image:before{content:"\f03e"}.fa-microphone:before{content:"\f130"}.fa-cow:before{content:"\f6c8"}.fa-caret-up:before{content:"\f0d8"}.fa-screwdriver:before{content:"\f54a"}.fa-folder-closed:before{content:"\e185"}.fa-house-tsunami:before{content:"\e515"}.fa-square-nfi:before{content:"\e576"}.fa-arrow-up-from-ground-water:before{content:"\e4b5"}.fa-glass-martini-alt:before,.fa-martini-glass:before{content:"\f57b"}.fa-rotate-back:before,.fa-rotate-backward:before,.fa-rotate-left:before,.fa-undo-alt:before{content:"\f2ea"}.fa-columns:before,.fa-table-columns:before{content:"\f0db"}.fa-lemon:before{content:"\f094"}.fa-head-side-mask:before{content:"\e063"}.fa-handshake:before{content:"\f2b5"}.fa-gem:before{content:"\f3a5"}.fa-dolly-box:before,.fa-dolly:before{content:"\f472"}.fa-smoking:before{content:"\f48d"}.fa-compress-arrows-alt:before,.fa-minimize:before{content:"\f78c"}.fa-monument:before{content:"\f5a6"}.fa-snowplow:before{content:"\f7d2"}.fa-angle-double-right:before,.fa-angles-right:before{content:"\f101"}.fa-cannabis:before{content:"\f55f"}.fa-circle-play:before,.fa-play-circle:before{content:"\f144"}.fa-tablets:before{content:"\f490"}.fa-ethernet:before{content:"\f796"}.fa-eur:before,.fa-euro-sign:before,.fa-euro:before{content:"\f153"}.fa-chair:before{content:"\f6c0"}.fa-check-circle:before,.fa-circle-check:before{content:"\f058"}.fa-circle-stop:before,.fa-stop-circle:before{content:"\f28d"}.fa-compass-drafting:before,.fa-drafting-compass:before{content:"\f568"}.fa-plate-wheat:before{content:"\e55a"}.fa-icicles:before{content:"\f7ad"}.fa-person-shelter:before{content:"\e54f"}.fa-neuter:before{content:"\f22c"}.fa-id-badge:before{content:"\f2c1"}.fa-marker:before{content:"\f5a1"}.fa-face-laugh-beam:before,.fa-laugh-beam:before{content:"\f59a"}.fa-helicopter-symbol:before{content:"\e502"}.fa-universal-access:before{content:"\f29a"}.fa-chevron-circle-up:before,.fa-circle-chevron-up:before{content:"\f139"}.fa-lari-sign:before{content:"\e1c8"}.fa-volcano:before{content:"\f770"}.fa-person-walking-dashed-line-arrow-right:before{content:"\e553"}.fa-gbp:before,.fa-pound-sign:before,.fa-sterling-sign:before{content:"\f154"}.fa-viruses:before{content:"\e076"}.fa-square-person-confined:before{content:"\e577"}.fa-user-tie:before{content:"\f508"}.fa-arrow-down-long:before,.fa-long-arrow-down:before{content:"\f175"}.fa-tent-arrow-down-to-line:before{content:"\e57e"}.fa-certificate:before{content:"\f0a3"}.fa-mail-reply-all:before,.fa-reply-all:before{content:"\f122"}.fa-suitcase:before{content:"\f0f2"}.fa-person-skating:before,.fa-skating:before{content:"\f7c5"}.fa-filter-circle-dollar:before,.fa-funnel-dollar:before{content:"\f662"}.fa-camera-retro:before{content:"\f083"}.fa-arrow-circle-down:before,.fa-circle-arrow-down:before{content:"\f0ab"}.fa-arrow-right-to-file:before,.fa-file-import:before{content:"\f56f"}.fa-external-link-square:before,.fa-square-arrow-up-right:before{content:"\f14c"}.fa-box-open:before{content:"\f49e"}.fa-scroll:before{content:"\f70e"}.fa-spa:before{content:"\f5bb"}.fa-location-pin-lock:before{content:"\e51f"}.fa-pause:before{content:"\f04c"}.fa-hill-avalanche:before{content:"\e507"}.fa-temperature-0:before,.fa-temperature-empty:before,.fa-thermometer-0:before,.fa-thermometer-empty:before{content:"\f2cb"}.fa-bomb:before{content:"\f1e2"}.fa-registered:before{content:"\f25d"}.fa-address-card:before,.fa-contact-card:before,.fa-vcard:before{content:"\f2bb"}.fa-balance-scale-right:before,.fa-scale-unbalanced-flip:before{content:"\f516"}.fa-subscript:before{content:"\f12c"}.fa-diamond-turn-right:before,.fa-directions:before{content:"\f5eb"}.fa-burst:before{content:"\e4dc"}.fa-house-laptop:before,.fa-laptop-house:before{content:"\e066"}.fa-face-tired:before,.fa-tired:before{content:"\f5c8"}.fa-money-bills:before{content:"\e1f3"}.fa-smog:before{content:"\f75f"}.fa-crutch:before{content:"\f7f7"}.fa-cloud-arrow-up:before,.fa-cloud-upload-alt:before,.fa-cloud-upload:before{content:"\f0ee"}.fa-palette:before{content:"\f53f"}.fa-arrows-turn-right:before{content:"\e4c0"}.fa-vest:before{content:"\e085"}.fa-ferry:before{content:"\e4ea"}.fa-arrows-down-to-people:before{content:"\e4b9"}.fa-seedling:before,.fa-sprout:before{content:"\f4d8"}.fa-arrows-alt-h:before,.fa-left-right:before{content:"\f337"}.fa-boxes-packing:before{content:"\e4c7"}.fa-arrow-circle-left:before,.fa-circle-arrow-left:before{content:"\f0a8"}.fa-group-arrows-rotate:before{content:"\e4f6"}.fa-bowl-food:before{content:"\e4c6"}.fa-candy-cane:before{content:"\f786"}.fa-arrow-down-wide-short:before,.fa-sort-amount-asc:before,.fa-sort-amount-down:before{content:"\f160"}.fa-cloud-bolt:before,.fa-thunderstorm:before{content:"\f76c"}.fa-remove-format:before,.fa-text-slash:before{content:"\f87d"}.fa-face-smile-wink:before,.fa-smile-wink:before{content:"\f4da"}.fa-file-word:before{content:"\f1c2"}.fa-file-powerpoint:before{content:"\f1c4"}.fa-arrows-h:before,.fa-arrows-left-right:before{content:"\f07e"}.fa-house-lock:before{content:"\e510"}.fa-cloud-arrow-down:before,.fa-cloud-download-alt:before,.fa-cloud-download:before{content:"\f0ed"}.fa-children:before{content:"\e4e1"}.fa-blackboard:before,.fa-chalkboard:before{content:"\f51b"}.fa-user-alt-slash:before,.fa-user-large-slash:before{content:"\f4fa"}.fa-envelope-open:before{content:"\f2b6"}.fa-handshake-alt-slash:before,.fa-handshake-simple-slash:before{content:"\e05f"}.fa-mattress-pillow:before{content:"\e525"}.fa-guarani-sign:before{content:"\e19a"}.fa-arrows-rotate:before,.fa-refresh:before,.fa-sync:before{content:"\f021"}.fa-fire-extinguisher:before{content:"\f134"}.fa-cruzeiro-sign:before{content:"\e152"}.fa-greater-than-equal:before{content:"\f532"}.fa-shield-alt:before,.fa-shield-halved:before{content:"\f3ed"}.fa-atlas:before,.fa-book-atlas:before{content:"\f558"}.fa-virus:before{content:"\e074"}.fa-envelope-circle-check:before{content:"\e4e8"}.fa-layer-group:before{content:"\f5fd"}.fa-arrows-to-dot:before{content:"\e4be"}.fa-archway:before{content:"\f557"}.fa-heart-circle-check:before{content:"\e4fd"}.fa-house-chimney-crack:before,.fa-house-damage:before{content:"\f6f1"}.fa-file-archive:before,.fa-file-zipper:before{content:"\f1c6"}.fa-square:before{content:"\f0c8"}.fa-glass-martini:before,.fa-martini-glass-empty:before{content:"\f000"}.fa-couch:before{content:"\f4b8"}.fa-cedi-sign:before{content:"\e0df"}.fa-italic:before{content:"\f033"}.fa-church:before{content:"\f51d"}.fa-comments-dollar:before{content:"\f653"}.fa-democrat:before{content:"\f747"}.fa-z:before{content:"\5a"}.fa-person-skiing:before,.fa-skiing:before{content:"\f7c9"}.fa-road-lock:before{content:"\e567"}.fa-a:before{content:"\41"}.fa-temperature-arrow-down:before,.fa-temperature-down:before{content:"\e03f"}.fa-feather-alt:before,.fa-feather-pointed:before{content:"\f56b"}.fa-p:before{content:"\50"}.fa-snowflake:before{content:"\f2dc"}.fa-newspaper:before{content:"\f1ea"}.fa-ad:before,.fa-rectangle-ad:before{content:"\f641"}.fa-arrow-circle-right:before,.fa-circle-arrow-right:before{content:"\f0a9"}.fa-filter-circle-xmark:before{content:"\e17b"}.fa-locust:before{content:"\e520"}.fa-sort:before,.fa-unsorted:before{content:"\f0dc"}.fa-list-1-2:before,.fa-list-numeric:before,.fa-list-ol:before{content:"\f0cb"}.fa-person-dress-burst:before{content:"\e544"}.fa-money-check-alt:before,.fa-money-check-dollar:before{content:"\f53d"}.fa-vector-square:before{content:"\f5cb"}.fa-bread-slice:before{content:"\f7ec"}.fa-language:before{content:"\f1ab"}.fa-face-kiss-wink-heart:before,.fa-kiss-wink-heart:before{content:"\f598"}.fa-filter:before{content:"\f0b0"}.fa-question:before{content:"\3f"}.fa-file-signature:before{content:"\f573"}.fa-arrows-alt:before,.fa-up-down-left-right:before{content:"\f0b2"}.fa-house-chimney-user:before{content:"\e065"}.fa-hand-holding-heart:before{content:"\f4be"}.fa-puzzle-piece:before{content:"\f12e"}.fa-money-check:before{content:"\f53c"}.fa-star-half-alt:before,.fa-star-half-stroke:before{content:"\f5c0"}.fa-code:before{content:"\f121"}.fa-glass-whiskey:before,.fa-whiskey-glass:before{content:"\f7a0"}.fa-building-circle-exclamation:before{content:"\e4d3"}.fa-magnifying-glass-chart:before{content:"\e522"}.fa-arrow-up-right-from-square:before,.fa-external-link:before{content:"\f08e"}.fa-cubes-stacked:before{content:"\e4e6"}.fa-krw:before,.fa-won-sign:before,.fa-won:before{content:"\f159"}.fa-virus-covid:before{content:"\e4a8"}.fa-austral-sign:before{content:"\e0a9"}.fa-f:before{content:"\46"}.fa-leaf:before{content:"\f06c"}.fa-road:before{content:"\f018"}.fa-cab:before,.fa-taxi:before{content:"\f1ba"}.fa-person-circle-plus:before{content:"\e541"}.fa-chart-pie:before,.fa-pie-chart:before{content:"\f200"}.fa-bolt-lightning:before{content:"\e0b7"}.fa-sack-xmark:before{content:"\e56a"}.fa-file-excel:before{content:"\f1c3"}.fa-file-contract:before{content:"\f56c"}.fa-fish-fins:before{content:"\e4f2"}.fa-building-flag:before{content:"\e4d5"}.fa-face-grin-beam:before,.fa-grin-beam:before{content:"\f582"}.fa-object-ungroup:before{content:"\f248"}.fa-poop:before{content:"\f619"}.fa-location-pin:before,.fa-map-marker:before{content:"\f041"}.fa-kaaba:before{content:"\f66b"}.fa-toilet-paper:before{content:"\f71e"}.fa-hard-hat:before,.fa-hat-hard:before,.fa-helmet-safety:before{content:"\f807"}.fa-eject:before{content:"\f052"}.fa-arrow-alt-circle-right:before,.fa-circle-right:before{content:"\f35a"}.fa-plane-circle-check:before{content:"\e555"}.fa-face-rolling-eyes:before,.fa-meh-rolling-eyes:before{content:"\f5a5"}.fa-object-group:before{content:"\f247"}.fa-chart-line:before,.fa-line-chart:before{content:"\f201"}.fa-mask-ventilator:before{content:"\e524"}.fa-arrow-right:before{content:"\f061"}.fa-map-signs:before,.fa-signs-post:before{content:"\f277"}.fa-cash-register:before{content:"\f788"}.fa-person-circle-question:before{content:"\e542"}.fa-h:before{content:"\48"}.fa-tarp:before{content:"\e57b"}.fa-screwdriver-wrench:before,.fa-tools:before{content:"\f7d9"}.fa-arrows-to-eye:before{content:"\e4bf"}.fa-plug-circle-bolt:before{content:"\e55b"}.fa-heart:before{content:"\f004"}.fa-mars-and-venus:before{content:"\f224"}.fa-home-user:before,.fa-house-user:before{content:"\e1b0"}.fa-dumpster-fire:before{content:"\f794"}.fa-house-crack:before{content:"\e3b1"}.fa-cocktail:before,.fa-martini-glass-citrus:before{content:"\f561"}.fa-face-surprise:before,.fa-surprise:before{content:"\f5c2"}.fa-bottle-water:before{content:"\e4c5"}.fa-circle-pause:before,.fa-pause-circle:before{content:"\f28b"}.fa-toilet-paper-slash:before{content:"\e072"}.fa-apple-alt:before,.fa-apple-whole:before{content:"\f5d1"}.fa-kitchen-set:before{content:"\e51a"}.fa-r:before{content:"\52"}.fa-temperature-1:before,.fa-temperature-quarter:before,.fa-thermometer-1:before,.fa-thermometer-quarter:before{content:"\f2ca"}.fa-cube:before{content:"\f1b2"}.fa-bitcoin-sign:before{content:"\e0b4"}.fa-shield-dog:before{content:"\e573"}.fa-solar-panel:before{content:"\f5ba"}.fa-lock-open:before{content:"\f3c1"}.fa-elevator:before{content:"\e16d"}.fa-money-bill-transfer:before{content:"\e528"}.fa-money-bill-trend-up:before{content:"\e529"}.fa-house-flood-water-circle-arrow-right:before{content:"\e50f"}.fa-poll-h:before,.fa-square-poll-horizontal:before{content:"\f682"}.fa-circle:before{content:"\f111"}.fa-backward-fast:before,.fa-fast-backward:before{content:"\f049"}.fa-recycle:before{content:"\f1b8"}.fa-user-astronaut:before{content:"\f4fb"}.fa-plane-slash:before{content:"\e069"}.fa-trademark:before{content:"\f25c"}.fa-basketball-ball:before,.fa-basketball:before{content:"\f434"}.fa-satellite-dish:before{content:"\f7c0"}.fa-arrow-alt-circle-up:before,.fa-circle-up:before{content:"\f35b"}.fa-mobile-alt:before,.fa-mobile-screen-button:before{content:"\f3cd"}.fa-volume-high:before,.fa-volume-up:before{content:"\f028"}.fa-users-rays:before{content:"\e593"}.fa-wallet:before{content:"\f555"}.fa-clipboard-check:before{content:"\f46c"}.fa-file-audio:before{content:"\f1c7"}.fa-burger:before,.fa-hamburger:before{content:"\f805"}.fa-wrench:before{content:"\f0ad"}.fa-bugs:before{content:"\e4d0"}.fa-rupee-sign:before,.fa-rupee:before{content:"\f156"}.fa-file-image:before{content:"\f1c5"}.fa-circle-question:before,.fa-question-circle:before{content:"\f059"}.fa-plane-departure:before{content:"\f5b0"}.fa-handshake-slash:before{content:"\e060"}.fa-book-bookmark:before{content:"\e0bb"}.fa-code-branch:before{content:"\f126"}.fa-hat-cowboy:before{content:"\f8c0"}.fa-bridge:before{content:"\e4c8"}.fa-phone-alt:before,.fa-phone-flip:before{content:"\f879"}.fa-truck-front:before{content:"\e2b7"}.fa-cat:before{content:"\f6be"}.fa-anchor-circle-exclamation:before{content:"\e4ab"}.fa-truck-field:before{content:"\e58d"}.fa-route:before{content:"\f4d7"}.fa-clipboard-question:before{conte
nt:"\e4e3"}.fa-panorama:before{content:"\e209"}.fa-comment-medical:before{content:"\f7f5"}.fa-teeth-open:before{content:"\f62f"}.fa-file-circle-minus:before{content:"\e4ed"}.fa-tags:before{content:"\f02c"}.fa-wine-glass:before{content:"\f4e3"}.fa-fast-forward:before,.fa-forward-fast:before{content:"\f050"}.fa-face-meh-blank:before,.fa-meh-blank:before{content:"\f5a4"}.fa-parking:before,.fa-square-parking:before{content:"\f540"}.fa-house-signal:before{content:"\e012"}.fa-bars-progress:before,.fa-tasks-alt:before{content:"\f828"}.fa-faucet-drip:before{content:"\e006"}.fa-cart-flatbed:before,.fa-dolly-flatbed:before{content:"\f474"}.fa-ban-smoking:before,.fa-smoking-ban:before{content:"\f54d"}.fa-terminal:before{content:"\f120"}.fa-mobile-button:before{content:"\f10b"}.fa-house-medical-flag:before{content:"\e514"}.fa-basket-shopping:before,.fa-shopping-basket:before{content:"\f291"}.fa-tape:before{content:"\f4db"}.fa-bus-alt:before,.fa-bus-simple:before{content:"\f55e"}.fa-eye:before{content:"\f06e"}.fa-face-sad-cry:before,.fa-sad-cry:before{content:"\f5b3"}.fa-audio-description:before{content:"\f29e"}.fa-person-military-to-person:before{content:"\e54c"}.fa-file-shield:before{content:"\e4f0"}.fa-user-slash:before{content:"\f506"}.fa-pen:before{content:"\f304"}.fa-tower-observation:before{content:"\e586"}.fa-file-code:before{content:"\f1c9"}.fa-signal-5:before,.fa-signal-perfect:before,.fa-signal:before{content:"\f012"}.fa-bus:before{content:"\f207"}.fa-heart-circle-xmark:before{content:"\e501"}.fa-home-lg:before,.fa-house-chimney:before{content:"\e3af"}.fa-window-maximize:before{content:"\f2d0"}.fa-face-frown:before,.fa-frown:before{content:"\f119"}.fa-prescription:before{content:"\f5b1"}.fa-shop:before,.fa-store-alt:before{content:"\f54f"}.fa-floppy-disk:before,.fa-save:before{content:"\f0c7"}.fa-vihara:before{content:"\f6a7"}.fa-balance-scale-left:before,.fa-scale-unbalanced:before{content:"\f515"}.fa-sort-asc:before,.fa-sort-up:before{content:"\f0de"}.fa-comment-dots:before,.fa-commenting:before{content:"\f4ad"}.fa-plant-wilt:before{content:"\e5aa"}.fa-diamond:before{content:"\f219"}.fa-face-grin-squint:before,.fa-grin-squint:before{content:"\f585"}.fa-hand-holding-dollar:before,.fa-hand-holding-usd:before{content:"\f4c0"}.fa-bacterium:before{content:"\e05a"}.fa-hand-pointer:before{content:"\f25a"}.fa-drum-steelpan:before{content:"\f56a"}.fa-hand-scissors:before{content:"\f257"}.fa-hands-praying:before,.fa-praying-hands:before{content:"\f684"}.fa-arrow-right-rotate:before,.fa-arrow-rotate-forward:before,.fa-arrow-rotate-right:before,.fa-redo:before{content:"\f01e"}.fa-biohazard:before{content:"\f780"}.fa-location-crosshairs:before,.fa-location:before{content:"\f601"}.fa-mars-double:before{content:"\f227"}.fa-child-dress:before{content:"\e59c"}.fa-users-between-lines:before{content:"\e591"}.fa-lungs-virus:before{content:"\e067"}.fa-face-grin-tears:before,.fa-grin-tears:before{content:"\f588"}.fa-phone:before{content:"\f095"}.fa-calendar-times:before,.fa-calendar-xmark:before{content:"\f273"}.fa-child-reaching:before{content:"\e59d"}.fa-head-side-virus:before{content:"\e064"}.fa-user-cog:before,.fa-user-gear:before{content:"\f4fe"}.fa-arrow-up-1-9:before,.fa-sort-numeric-up:before{content:"\f163"}.fa-door-closed:before{content:"\f52a"}.fa-shield-virus:before{content:"\e06c"}.fa-dice-six:before{content:"\f526"}.fa-mosquito-net:before{content:"\e52c"}.fa-bridge-water:before{content:"\e4ce"}.fa-person-booth:before{content:"\f756"}.fa-text-width:before{content:"\f035"}.fa-hat-wizard:before{content:"\f6e8"}.fa-pen-fancy:before{content:"\f5ac"}.fa-digging:before,.fa-person-digging:before{content:"\f85e"}.fa-trash:before{content:"\f1f8"}.fa-gauge-simple-med:before,.fa-gauge-simple:before,.fa-tachometer-average:before{content:"\f629"}.fa-book-medical:before{content:"\f7e6"}.fa-poo:before{content:"\f2fe"}.fa-quote-right-alt:before,.fa-quote-right:before{content:"\f10e"}.fa-shirt:before,.fa-t-shirt:before,.fa-tshirt:before{content:"\f553"}.fa-cubes:before{content:"\f1b3"}.fa-divide:before{content:"\f529"}.fa-tenge-sign:before,.fa-tenge:before{content:"\f7d7"}.fa-headphones:before{content:"\f025"}.fa-hands-holding:before{content:"\f4c2"}.fa-hands-clapping:before{content:"\e1a8"}.fa-republican:before{content:"\f75e"}.fa-arrow-left:before{content:"\f060"}.fa-person-circle-xmark:before{content:"\e543"}.fa-ruler:before{content:"\f545"}.fa-align-left:before{content:"\f036"}.fa-dice-d6:before{content:"\f6d1"}.fa-restroom:before{content:"\f7bd"}.fa-j:before{content:"\4a"}.fa-users-viewfinder:before{content:"\e595"}.fa-file-video:before{content:"\f1c8"}.fa-external-link-alt:before,.fa-up-right-from-square:before{content:"\f35d"}.fa-table-cells:before,.fa-th:before{content:"\f00a"}.fa-file-pdf:before{content:"\f1c1"}.fa-bible:before,.fa-book-bible:before{content:"\f647"}.fa-o:before{content:"\4f"}.fa-medkit:before,.fa-suitcase-medical:before{content:"\f0fa"}.fa-user-secret:before{content:"\f21b"}.fa-otter:before{content:"\f700"}.fa-female:before,.fa-person-dress:before{content:"\f182"}.fa-comment-dollar:before{content:"\f651"}.fa-briefcase-clock:before,.fa-business-time:before{content:"\f64a"}.fa-table-cells-large:before,.fa-th-large:before{content:"\f009"}.fa-book-tanakh:before,.fa-tanakh:before{content:"\f827"}.fa-phone-volume:before,.fa-volume-control-phone:before{content:"\f2a0"}.fa-hat-cowboy-side:before{content:"\f8c1"}.fa-clipboard-user:before{content:"\f7f3"}.fa-child:before{content:"\f1ae"}.fa-lira-sign:before{content:"\f195"}.fa-satellite:before{content:"\f7bf"}.fa-plane-lock:before{content:"\e558"}.fa-tag:before{content:"\f02b"}.fa-comment:before{content:"\f075"}.fa-birthday-cake:before,.fa-cake-candles:before,.fa-cake:before{content:"\f1fd"}.fa-envelope:before{content:"\f0e0"}.fa-angle-double-up:before,.fa-angles-up:before{content:"\f102"}.fa-paperclip:before{content:"\f0c6"}.fa-arrow-right-to-city:before{content:"\e4b3"}.fa-ribbon:before{content:"\f4d6"}.fa-lungs:before{content:"\f604"}.fa-arrow-up-9-1:before,.fa-sort-numeric-up-alt:before{content:"\f887"}.fa-litecoin-sign:before{content:"\e1d3"}.fa-border-none:before{content:"\f850"}.fa-circle-nodes:before{content:"\e4e2"}.fa-parachute-box:before{content:"\f4cd"}.fa-indent:before{content:"\f03c"}.fa-truck-field-un:before{content:"\e58e"}.fa-hourglass-empty:before,.fa-hourglass:before{content:"\f254"}.fa-mountain:before{content:"\f6fc"}.fa-user-doctor:before,.fa-user-md:before{content:"\f0f0"}.fa-circle-info:before,.fa-info-circle:before{content:"\f05a"}.fa-cloud-meatball:before{content:"\f73b"}.fa-camera-alt:before,.fa-camera:before{content:"\f030"}.fa-square-virus:before{content:"\e578"}.fa-meteor:before{content:"\f753"}.fa-car-on:before{content:"\e4dd"}.fa-sleigh:before{content:"\f7cc"}.fa-arrow-down-1-9:before,.fa-sort-numeric-asc:before,.fa-sort-numeric-down:before{content:"\f162"}.fa-hand-holding-droplet:before,.fa-hand-holding-water:before{content:"\f4c1"}.fa-water:before{content:"\f773"}.fa-calendar-check:before{content:"\f274"}.fa-braille:before{content:"\f2a1"}.fa-prescription-bottle-alt:before,.fa-prescription-bottle-medical:before{content:"\f486"}.fa-landmark:before{content:"\f66f"}.fa-truck:before{content:"\f0d1"}.fa-crosshairs:before{content:"\f05b"}.fa-person-cane:before{content:"\e53c"}.fa-tent:before{content:"\e57d"}.fa-vest-patches:before{content:"\e086"}.fa-check-double:before{content:"\f560"}.fa-arrow-down-a-z:before,.fa-sort-alpha-asc:before,.fa-sort-alpha-down:before{content:"\f15d"}.fa-money-bill-wheat:before{content:"\e52a"}.fa-cookie:before{content:"\f563"}.fa-arrow-left-rotate:before,.fa-arrow-rotate-back:before,.fa-arrow-rotate-backward:before,.fa-arrow-rotate-left:before,.fa-undo:before{content:"\f0e2"}.fa-hard-drive:before,.fa-hdd:before{content:"\f0a0"}.fa-face-grin-squint-tears:before,.fa-grin-squint-tears:before{content:"\f586"}.fa-dumbbell:before{content:"\f44b"}.fa-list-alt:before,.fa-rectangle-list:before{content:"\f022"}.fa-tarp-droplet:before{content:"\e57c"}.fa-house-medical-circle-check:before{content:"\e511"}.fa-person-skiing-nordic:before,.fa-skiing-nordic:before{content:"\f7ca"}.fa-calendar-plus:before{content:"\f271"}.fa-plane-arrival:before{content:"\f5af"}.fa-arrow-alt-circle-left:before,.fa-circle-left:before{content:"\f359"}.fa-subway:before,.fa-train-subway:before{content:"\f239"}.fa-chart-gantt:before{content:"\e0e4"}.fa-indian-rupee-sign:before,.fa-indian-rupee:before,.fa-inr:before{content:"\e1bc"}.fa-crop-alt:before,.fa-crop-simple:before{content:"\f565"}.fa-money-bill-1:before,.fa-money-bill-alt:before{content:"\f3d1"}.fa-left-long:before,.fa-long-arrow-alt-left:before{content:"\f30a"}.fa-dna:before{content:"\f471"}.fa-virus-slash:before{content:"\e075"}.fa-minus:before,.fa-subtract:before{content:"\f068"}.fa-chess:before{content:"\f439"}.fa-arrow-left-long:before,.fa-long-arrow-left:before{content:"\f177"}.fa-plug-circle-check:before{content:"\e55c"}.fa-street-view:before{content:"\f21d"}.fa-franc-sign:before{content:"\e18f"}.fa-volume-off:before{content:"\f026"}.fa-american-sign-language-interpreting:before,.fa-asl-interpreting:before,.fa-hands-american-sign-language-interpreting:before,.fa-hands-asl-interpreting:before{content:"\f2a3"}.fa-cog:before,.fa-gear:before{content:"\f013"}.fa-droplet-slash:before,.fa-tint-slash:before{content:"\f5c7"}.fa-mosque:before{content:"\f678"}.fa-mosquito:before{content:"\e52b"}.fa-star-of-david:before{content:"\f69a"}.fa-person-military-rifle:before{content:"\e54b"}.fa-cart-shopping:before,.fa-shopping-cart:before{content:"\f07a"}.fa-vials:before{content:"\f493"}.fa-plug-circle-plus:before{content:"\e55f"}.fa-place-of-worship:before{content:"\f67f"}.fa-grip-vertical:before{content:"\f58e"}.fa-arrow-turn-up:before,.fa-level-up:before{content:"\f148"}.fa-u:before{content:"\55"}.fa-square-root-alt:before,.fa-square-root-variable:before{content:"\f698"}.fa-clock-four:before,.fa-clock:before{content:"\f017"}.fa-backward-step:before,.fa-step-backward:before{content:"\f048"}.fa-pallet:before{content:"\f482"}.fa-faucet:before{content:"\e005"}.fa-baseball-bat-ball:before{content:"\f432"}.fa-s:before{content:"\53"}.fa-timeline:before{content:"\e29c"}.fa-keyboard:before{content:"\f11c"}.fa-caret-down:before{content:"\f0d7"}.fa-clinic-medical:before,.fa-house-chimney-medical:before{content:"\f7f2"}.fa-temperature-3:before,.fa-temperature-three-quarters:before,.fa-thermometer-3:before,.fa-thermometer-three-quarters:before{content:"\f2c8"}.fa-mobile-android-alt:before,.fa-mobile-screen:before{content:"\f3cf"}.fa-plane-up:before{content:"\e22d"}.fa-piggy-bank:before{content:"\f4d3"}.fa-battery-3:before,.fa-battery-half:before{content:"\f242"}.fa-mountain-city:before{content:"\e52e"}.fa-coins:before{content:"\f51e"}.fa-khanda:before{content:"\f66d"}.fa-sliders-h:before,.fa-sliders:before{content:"\f1de"}.fa-folder-tree:before{content:"\f802"}.fa-network-wired:before{content:"\f6ff"}.fa-map-pin:before{content:"\f276"}.fa-hamsa:before{content:"\f665"}.fa-cent-sign:before{content:"\e3f5"}.fa-flask:before{content:"\f0c3"}.fa-person-pregnant:before{content:"\e31e"}.fa-wand-sparkles:before{content:"\f72b"}.fa-ellipsis-v:before,.fa-ellipsis-vertical:before{content:"\f142"}.fa-ticket:before{content:"\f145"}.fa-power-off:before{content:"\f011"}.fa-long-arrow-alt-right:before,.fa-right-long:before{content:"\f30b"}.fa-flag-usa:before{content:"\f74d"}.fa-laptop-file:before{content:"\e51d"}.fa-teletype:before,.fa-tty:before{content:"\f1e4"}.fa-diagram-next:before{content:"\e476"}.fa-person-rifle:before{content:"\e54e"}.fa-house-medical-circle-exclamation:before{content:"\e512"}.fa-closed-captioning:before{content:"\f20a"}.fa-hiking:before,.fa-person-hiking:before{content:"\f6ec"}.fa-venus-double:before{content:"\f226"}.fa-images:before{content:"\f302"}.fa-calculator:before{content:"\f1ec"}.fa-people-pulling:before{content:"\e535"}.fa-n:before{content:"\4e"}.fa-cable-car:before,.fa-tram:before{content:"\f7da"}.fa-cloud-rain:before{content:"\f73d"}.fa-building-circle-xmark:before{content:"\e4d4"}.fa-ship:before{content:"\f21a"}.fa-arrows-down-to-line:before{content:"\e4b8"}.fa-download:before{content:"\f019"}.fa-face-grin:before,.fa-grin:before{content:"\f580"}.fa-backspace:before,.fa-delete-left:before{content:"\f55a"}.fa-eye-dropper-empty:before,.fa-eye-dropper:before,.fa-eyedropper:before{content:"\f1fb"}.fa-file-circle-check:before{content:"\e5a0"}.fa-forward:before{content:"\f04e"}.fa-mobile-android:before,.fa-mobile-phone:before,.fa-mobile:before{content:"\f3ce"}.fa-face-meh:before,.fa-meh:before{content:"\f11a"}.fa-align-center:before{content:"\f037"}.fa-book-dead:before,.fa-book-skull:before{content:"\f6b7"}.fa-drivers-license:before,.fa-id-card:before{content:"\f2c2"}.fa-dedent:before,.fa-outdent:before{content:"\f03b"}.fa-heart-circle-exclamation:before{content:"\e4fe"}.fa-home-alt:before,.fa-home-lg-alt:before,.fa-home:before,.fa-house:before{content:"\f015"}.fa-calendar-week:before{content:"\f784"}.fa-laptop-medical:before{content:"\f812"}.fa-b:before{content:"\42"}.fa-file-medical:before{content:"\f477"}.fa-dice-one:before{content:"\f525"}.fa-kiwi-bird:before{content:"\f535"}.fa-arrow-right-arrow-left:before,.fa-exchange:before{content:"\f0ec"}.fa-redo-alt:before,.fa-rotate-forward:before,.fa-rotate-right:before{content:"\f2f9"}.fa-cutlery:before,.fa-utensils:before{content:"\f2e7"}.fa-arrow-up-wide-short:before,.fa-sort-amount-up:before{content:"\f161"}.fa-mill-sign:before{content:"\e1ed"}.fa-bowl-rice:before{content:"\e2eb"}.fa-skull:before{content:"\f54c"}.fa-broadcast-tower:before,.fa-tower-broadcast:before{content:"\f519"}.fa-truck-pickup:before{content:"\f63c"}.fa-long-arrow-alt-up:before,.fa-up-long:before{content:"\f30c"}.fa-stop:before{content:"\f04d"}.fa-code-merge:before{content:"\f387"}.fa-upload:before{content:"\f093"}.fa-hurricane:before{content:"\f751"}.fa-mound:before{content:"\e52d"}.fa-toilet-portable:before{content:"\e583"}.fa-compact-disc:before{content:"\f51f"}.fa-file-arrow-down:before,.fa-file-download:before{content:"\f56d"}.fa-caravan:before{content:"\f8ff"}.fa-shield-cat:before{content:"\e572"}.fa-bolt:before,.fa-zap:before{content:"\f0e7"}.fa-glass-water:before{content:"\e4f4"}.fa-oil-well:before{content:"\e532"}.fa-vault:before{content:"\e2c5"}.fa-mars:before{content:"\f222"}.fa-toilet:before{content:"\f7d8"}.fa-plane-circle-xmark:before{content:"\e557"}.fa-cny:before,.fa-jpy:before,.fa-rmb:before,.fa-yen-sign:before,.fa-yen:before{content:"\f157"}.fa-rouble:before,.fa-rub:before,.fa-ruble-sign:before,.fa-ruble:before{content:"\f158"}.fa-sun:before{content:"\f185"}.fa-guitar:before{content:"\f7a6"}.fa-face-laugh-wink:before,.fa-laugh-wink:before{content:"\f59c"}.fa-horse-head:before{content:"\f7ab"}.fa-bore-hole:before{content:"\e4c3"}.fa-industry:before{content:"\f275"}.fa-arrow-alt-circle-down:before,.fa-circle-down:before{content:"\f358"}.fa-arrows-turn-to-dots:before{content:"\e4c1"}.fa-florin-sign:before{content:"\e184"}.fa-arrow-down-short-wide:before,.fa-sort-amount-desc:before,.fa-sort-amount-down-alt:before{content:"\f884"}.fa-less-than:before{content:"\3c"}.fa-angle-down:before{content:"\f107"}.fa-car-tunnel:before{content:"\e4de"}.fa-head-side-cough:before{content:"\e061"}.fa-grip-lines:before{content:"\f7a4"}.fa-thumbs-down:before{content:"\f165"}.fa-user-lock:before{content:"\f502"}.fa-arrow-right-long:before,.fa-long-arrow-right:before{content:"\f178"}.fa-anchor-circle-xmark:before{content:"\e4ac"}.fa-ellipsis-h:before,.fa-ellipsis:before{content:"\f141"}.fa-chess-pawn:before{content:"\f443"}.fa-first-aid:before,.fa-kit-medical:before{content:"\f479"}.fa-person-through-window:before{content:"\e5a9"}.fa-toolbox:before{content:"\f552"}.fa-hands-holding-circle:before{content:"\e4fb"}.fa-bug:before{content:"\f188"}.fa-credit-card-alt:before,.fa-credit-card:before{content:"\f09d"}.fa-automobile:before,.fa-car:before{content:"\f1b9"}.fa-hand-holding-hand:before{content:"\e4f7"}.fa-book-open-reader:before,.fa-book-reader:before{content:"\f5da"}.fa-mountain-sun:before{content:"\e52f"}.fa-arrows-left-right-to-line:before{content:"\e4ba"}.fa-dice-d20:before{content:"\f6cf"}.fa-truck-droplet:before{content:"\e58c"}.fa-file-circle-xmark:before{content:"\e5a1"}.fa-temperature-arrow-up:before,.fa-temperature-up:before{content:"\e040"}.fa-medal:before{content:"\f5a2"}.fa-bed:before{content:"\f236"}.fa-h-square:before,.fa-square-h:before{content:"\f0fd"}.fa-podcast:before{content:"\f2ce"}.fa-temperature-4:before,.fa-temperature-full:before,.fa-thermometer-4:before,.fa-thermometer-full:before{content:"\f2c7"}.fa-bell:before{content:"\f0f3"}.fa-superscript:before{content:"\f12b"}.fa-plug-circle-xmark:before{content:"\e560"}.fa-star-of-life:before{content:"\f621"}.fa-phone-slash:before{content:"\f3dd"}.fa-paint-roller:before{content:"\f5aa"}.fa-hands-helping:before,.fa-handshake-angle:before{content:"\f4c4"}.fa-location-dot:before,.fa-map-marker-alt:before{content:"\f3c5"}.fa-file:before{content:"\f15b"}.fa-greater-than:before{content:"\3e"}.fa-person-swimming:before,.fa-swimmer:before{content:"\f5c4"}.fa-arrow-down:before{content:"\f063"}.fa-droplet:before,.fa-tint:before{content:"\f043"}.fa-eraser:before{content:"\f12d"}.fa-earth-america:before,.fa-earth-americas:before,.fa-earth:before,.fa-globe-americas:before{content:"\f57d"}.fa-person-burst:before{content:"\e53b"}.fa-dove:before{content:"\f4ba"}.fa-battery-0:before,.fa-battery-empty:before{content:"\f244"}.fa-socks:before{content:"\f696"}.fa-inbox:before{content:"\f01c"}.fa-section:before{content:"\e447"}.fa-gauge-high:before,.fa-tachometer-alt-fast:before,.fa-tachometer-alt:before{content:"\f625"}.fa-envelope-open-text:before{content:"\f658"}.fa-hospital-alt:before,.fa-hospital-wide:before,.fa-hospital:before{content:"\f0f8"}.fa-wine-bottle:before{content:"\f72f"}.fa-chess-rook:before{content:"\f447"}.fa-bars-staggered:before,.fa-reorder:before,.fa-stream:before{content:"\f550"}.fa-dharmachakra:before{content:"\f655"}.fa-hotdog:before{content:"\f80f"}.fa-blind:before,.fa-person-walking-with-cane:before{content:"\f29d"}.fa-drum:before{content:"\f569"}.fa-ice-cream:before{content:"\f810"}.fa-heart-circle-bolt:before{content:"\e4fc"}.fa-fax:before{content:"\f1ac"}.fa-paragraph:before{content:"\f1dd"}.fa-check-to-slot:before,.fa-vote-yea:before{content:"\f772"}.fa-star-half:before{content:"\f089"}.fa-boxes-alt:before,.fa-boxes-stacked:before,.fa-boxes:before{content:"\f468"}.fa-chain:before,.fa-link:before{content:"\f0c1"}.fa-assistive-listening-systems:before,.fa-ear-listen:before{content:"\f2a2"}.fa-tree-city:before{content:"\e587"}.fa-play:before{content:"\f04b"}.fa-font:before{content:"\f031"}.fa-rupiah-sign:before{content:"\e23d"}.fa-magnifying-glass:before,.fa-search:before{content:"\f002"}.fa-ping-pong-paddle-ball:before,.fa-table-tennis-paddle-ball:before,.fa-table-tennis:before{content:"\f45d"}.fa-diagnoses:before,.fa-person-dots-from-line:before{content:"\f470"}.fa-trash-can-arrow-up:before,.fa-trash-restore-alt:before{content:"\f82a"}.fa-naira-sign:before{content:"\e1f6"}.fa-cart-arrow-down:before{content:"\f218"}.fa-walkie-talkie:before{content:"\f8ef"}.fa-file-edit:before,.fa-file-pen:before{content:"\f31c"}.fa-receipt:before{content:"\f543"}.fa-pen-square:before,.fa-pencil-square:before,.fa-square-pen:before{content:"\f14b"}.fa-suitcase-rolling:before{content:"\f5c1"}.fa-person-circle-exclamation:before{content:"\e53f"}.fa-chevron-down:before{content:"\f078"}.fa-battery-5:before,.fa-battery-full:before,.fa-battery:before{content:"\f240"}.fa-skull-crossbones:before{content:"\f714"}.fa-code-compare:before{content:"\e13a"}.fa-list-dots:before,.fa-list-ul:before{content:"\f0ca"}.fa-school-lock:before{content:"\e56f"}.fa-tower-cell:before{content:"\e585"}.fa-down-long:before,.fa-long-arrow-alt-down:before{content:"\f309"}.fa-ranking-star:before{content:"\e561"}.fa-chess-king:before{content:"\f43f"}.fa-person-harassing:before{content:"\e549"}.fa-brazilian-real-sign:before{content:"\e46c"}.fa-landmark-alt:before,.fa-landmark-dome:before{content:"\f752"}.fa-arrow-up:before{content:"\f062"}.fa-television:before,.fa-tv-alt:before,.fa-tv:before{content:"\f26c"}.fa-shrimp:before{content:"\e448"}.fa-list-check:before,.fa-tasks:before{content:"\f0ae"}.fa-jug-detergent:before{content:"\e519"}.fa-circle-user:before,.fa-user-circle:before{content:"\f2bd"}.fa-user-shield:before{content:"\f505"}.fa-wind:before{content:"\f72e"}.fa-car-burst:before,.fa-car-crash:before{content:"\f5e1"}.fa-y:before{content:"\59"}.fa-person-snowboarding:before,.fa-snowboarding:before{content:"\f7ce"}.fa-shipping-fast:before,.fa-truck-fast:before{content:"\f48b"}.fa-fish:before{content:"\f578"}.fa-user-graduate:before{content:"\f501"}.fa-adjust:before,.fa-circle-half-stroke:before{content:"\f042"}.fa-clapperboard:before{content:"\e131"}.fa-circle-radiation:before,.fa-radiation-alt:before{content:"\f7ba"}.fa-baseball-ball:before,.fa-baseball:before{content:"\f433"}.fa-jet-fighter-up:before{content:"\e518"}.fa-diagram-project:before,.fa-project-diagram:before{content:"\f542"}.fa-copy:before{content:"\f0c5"}.fa-volume-mute:before,.fa-volume-times:before,.fa-volume-xmark:before{content:"\f6a9"}.fa-hand-sparkles:before{content:"\e05d"}.fa-grip-horizontal:before,.fa-grip:before{content:"\f58d"}.fa-share-from-square:before,.fa-share-square:before{content:"\f14d"}.fa-child-combatant:before,.fa-child-rifle:before{content:"\e4e0"}.fa-gun:before{content:"\e19b"}.fa-phone-square:before,.fa-square-phone:before{content:"\f098"}.fa-add:before,.fa-plus:before{content:"\2b"}.fa-expand:before{content:"\f065"}.fa-computer:before{content:"\e4e5"}.fa-close:before,.fa-multiply:before,.fa-remove:before,.fa-times:before,.fa-xmark:before{content:"\f00d"}.fa-arrows-up-down-left-right:before,.fa-arrows:before{content:"\f047"}.fa-chalkboard-teacher:before,.fa-chalkboard-user:before{content:"\f51c"}.fa-peso-sign:before{content:"\e222"}.fa-building-shield:before{content:"\e4d8"}.fa-baby:before{content:"\f77c"}.fa-users-line:before{content:"\e592"}.fa-quote-left-alt:before,.fa-quote-left:before{content:"\f10d"}.fa-tractor:before{content:"\f722"}.fa-trash-arrow-up:before,.fa-trash-restore:before{content:"\f829"}.fa-arrow-down-up-lock:before{content:"\e4b0"}.fa-lines-leaning:before{content:"\e51e"}.fa-ruler-combined:before{content:"\f546"}.fa-copyright:before{content:"\f1f9"}.fa-equals:before{content:"\3d"}.fa-blender:before{content:"\f517"}.fa-teeth:before{content:"\f62e"}.fa-ils:before,.fa-shekel-sign:before,.fa-shekel:before,.fa-sheqel-sign:before,.fa-sheqel:before{content:"\f20b"}.fa-map:before{content:"\f279"}.fa-rocket:before{content:"\f135"}.fa-photo-film:before,.fa-photo-video:before{content:"\f87c"}.fa-folder-minus:before{content:"\f65d"}.fa-store:before{content:"\f54e"}.fa-arrow-trend-up:before{content:"\e098"}.fa-plug-circle-minus:before{content:"\e55e"}.fa-sign-hanging:before,.fa-sign:before{content:"\f4d9"}.fa-bezier-curve:before{content:"\f55b"}.fa-bell-slash:before{content:"\f1f6"}.fa-tablet-android:before,.fa-tablet:before{content:"\f3fb"}.fa-school-flag:before{content:"\e56e"}.fa-fill:before{content:"\f575"}.fa-angle-up:before{content:"\f106"}.fa-drumstick-bite:before{content:"\f6d7"}.fa-holly-berry:before{content:"\f7aa"}.fa-chevron-left:before{content:"\f053"}.fa-bacteria:before{content:"\e059"}.fa-hand-lizard:before{content:"\f258"}.fa-notdef:before{content:"\e1fe"}.fa-disease:before{content:"\f7fa"}.fa-briefcase-medical:before{content:"\f469"}.fa-genderless:before{content:"\f22d"}.fa-chevron-right:before{content:"\f054"}.fa-retweet:before{content:"\f079"}.fa-car-alt:before,.fa-car-rear:before{content:"\f5de"}.fa-pump-soap:before{content:"\e06b"}.fa-video-slash:before{content:"\f4e2"}.fa-battery-2:before,.fa-battery-quarter:before{content:"\f243"}.fa-radio:before{content:"\f8d7"}.fa-baby-carriage:before,.fa-carriage-baby:before{content:"\f77d"}.fa-traffic-light:before{content:"\f637"}.fa-thermometer:before{content:"\f491"}.fa-vr-cardboard:before{content:"\f729"}.fa-hand-middle-finger:before{content:"\f806"}.fa-percent:before,.fa-percentage:before{content:"\25"}.fa-truck-moving:before{content:"\f4df"}.fa-glass-water-droplet:before{content:"\e4f5"}.fa-display:before{content:"\e163"}.fa-face-smile:before,.fa-smile:before{content:"\f118"}.fa-thumb-tack:before,.fa-thumbtack:before{content:"\f08d"}.fa-trophy:before{content:"\f091"}.fa-person-praying:before,.fa-pray:before{content:"\f683"}.fa-hammer:before{content:"\f6e3"}.fa-hand-peace:before{content:"\f25b"}.fa-rotate:before,.fa-sync-alt:before{content:"\f2f1"}.fa-spinner:before{content:"\f110"}.fa-robot:before{content:"\f544"}.fa-peace:before{content:"\f67c"}.fa-cogs:before,.fa-gears:before{content:"\f085"}.fa-warehouse:before{content:"\f494"}.fa-arrow-up-right-dots:before{content:"\e4b7"}.fa-splotch:before{content:"\f5bc"}.fa-face-grin-hearts:before,.fa-grin-hearts:before{content:"\f584"}.fa-dice-four:before{content:"\f524"}.fa-sim-card:before{content:"\f7c4"}.fa-transgender-alt:before,.fa-transgender:before{content:"\f225"}.fa-mercury:before{content:"\f223"}.fa-arrow-turn-down:before,.fa-level-down:before{content:"\f149"}.fa-person-falling-burst:before{content:"\e547"}.fa-award:before{content:"\f559"}.fa-ticket-alt:before,.fa-ticket-simple:before{content:"\f3ff"}.fa-building:before{content:"\f1ad"}.fa-angle-double-left:before,.fa-angles-left:before{content:"\f100"}.fa-qrcode:before{content:"\f029"}.fa-clock-rotate-left:before,.fa-history:before{content:"\f1da"}.fa-face-grin-beam-sweat:before,.fa-grin-beam-sweat:before{content:"\f583"}.fa-arrow-right-from-file:before,.fa-file-export:before{content:"\f56e"}.fa-shield-blank:before,.fa-shield:before{content:"\f132"}.fa-arrow-up-short-wide:before,.fa-sort-amount-up-alt:before{content:"\f885"}.fa-house-medical:before{content:"\e3b2"}.fa-golf-ball-tee:before,.fa-golf-ball:before{content:"\f450"}.fa-chevron-circle-left:before,.fa-circle-chevron-left:before{content:"\f137"}.fa-house-chimney-window:before{content:"\e00d"}.fa-pen-nib:before{content:"\f5ad"}.fa-tent-arrow-turn-left:before{content:"\e580"}.fa-tents:before{content:"\e582"}.fa-magic:before,.fa-wand-magic:before{content:"\f0d0"}.fa-dog:before{content:"\f6d3"}.fa-carrot:before{content:"\f787"}.fa-moon:before{content:"\f186"}.fa-wine-glass-alt:before,.fa-wine-glass-empty:before{content:"\f5ce"}.fa-cheese:before{content:"\f7ef"}.fa-yin-yang:before{content:"\f6ad"}.fa-music:before{content:"\f001"}.fa-code-commit:before{content:"\f386"}.fa-temperature-low:before{content:"\f76b"}.fa-biking:before,.fa-person-biking:before{content:"\f84a"}.fa-broom:before{content:"\f51a"}.fa-shield-heart:before{content:"\e574"}.fa-gopuram:before{content:"\f664"}.fa-earth-oceania:before,.fa-globe-oceania:before{content:"\e47b"}.fa-square-xmark:before,.fa-times-square:before,.fa-xmark-square:before{content:"\f2d3"}.fa-hashtag:before{content:"\23"}.fa-expand-alt:before,.fa-up-right-and-down-left-from-center:before{content:"\f424"}.fa-oil-can:before{content:"\f613"}.fa-t:before{content:"\54"}.fa-hippo:before{content:"\f6ed"}.fa-chart-column:before{content:"\e0e3"}.fa-infinity:before{content:"\f534"}.fa-vial-circle-check:before{content:"\e596"}.fa-person-arrow-down-to-line:before{content:"\e538"}.fa-voicemail:before{content:"\f897"}.fa-fan:before{content:"\f863"}.fa-person-walking-luggage:before{content:"\e554"}.fa-arrows-alt-v:before,.fa-up-down:before{content:"\f338"}.fa-cloud-moon-rain:before{content:"\f73c"}.fa-calendar:before{content:"\f133"}.fa-trailer:before{content:"\e041"}.fa-bahai:before,.fa-haykal:before{content:"\f666"}.fa-sd-card:before{content:"\f7c2"}.fa-dragon:before{content:"\f6d5"}.fa-shoe-prints:before{content:"\f54b"}.fa-circle-plus:before,.fa-plus-circle:before{content:"\f055"}.fa-face-grin-tongue-wink:before,.fa-grin-tongue-wink:before{content:"\f58b"}.fa-hand-holding:before{content:"\f4bd"}.fa-plug-circle-exclamation:before{content:"\e55d"}.fa-chain-broken:before,.fa-chain-slash:before,.fa-link-slash:before,.fa-unlink:before{content:"\f127"}.fa-clone:before{content:"\f24d"}.fa-person-walking-arrow-loop-left:before{content:"\e551"}.fa-arrow-up-z-a:before,.fa-sort-alpha-up-alt:before{content:"\f882"}.fa-fire-alt:before,.fa-fire-flame-curved:before{content:"\f7e4"}.fa-tornado:before{content:"\f76f"}.fa-file-circle-plus:before{content:"\e494"}.fa-book-quran:before,.fa-quran:before{content:"\f687"}.fa-anchor:before{content:"\f13d"}.fa-border-all:before{content:"\f84c"}.fa-angry:before,.fa-face-angry:before{content:"\f556"}.fa-cookie-bite:before{content:"\f564"}.fa-arrow-trend-down:before{content:"\e097"}.fa-feed:before,.fa-rss:before{content:"\f09e"}.fa-draw-polygon:before{content:"\f5ee"}.fa-balance-scale:before,.fa-scale-balanced:before{content:"\f24e"}.fa-gauge-simple-high:before,.fa-tachometer-fast:before,.fa-tachometer:before{content:"\f62a"}.fa-shower:before{content:"\f2cc"}.fa-desktop-alt:before,.fa-desktop:before{content:"\f390"}.fa-m:before{content:"\4d"}.fa-table-list:before,.fa-th-list:before{content:"\f00b"}.fa-comment-sms:before,.fa-sms:before{content:"\f7cd"}.fa-book:before{content:"\f02d"}.fa-user-plus:before{content:"\f234"}.fa-check:before{content:"\f00c"}.fa-battery-4:before,.fa-battery-three-quarters:before{content:"\f241"}.fa-house-circle-check:before{content:"\e509"}.fa-angle-left:before{content:"\f104"}.fa-diagram-successor:before{content:"\e47a"}.fa-truck-arrow-right:before{content:"\e58b"}.fa-arrows-split-up-and-left:before{content:"\e4bc"}.fa-fist-raised:before,.fa-hand-fist:before{content:"\f6de"}.fa-cloud-moon:before{content:"\f6c3"}.fa-briefcase:before{content:"\f0b1"}.fa-person-falling:before{content:"\e546"}.fa-image-portrait:before,.fa-portrait:before{content:"\f3e0"}.fa-user-tag:before{content:"\f507"}.fa-rug:before{content:"\e569"}.fa-earth-europe:before,.fa-globe-europe:before{content:"\f7a2"}.fa-cart-flatbed-suitcase:before,.fa-luggage-cart:before{content:"\f59d"}.fa-rectangle-times:before,.fa-rectangle-xmark:before,.fa-times-rectangle:before,.fa-window-close:before{content:"\f410"}.fa-baht-sign:before{content:"\e0ac"}.fa-book-open:before{content:"\f518"}.fa-book-journal-whills:before,.fa-journal-whills:before{content:"\f66a"}.fa-handcuffs:before{content:"\e4f8"}.fa-exclamation-triangle:before,.fa-triangle-exclamation:before,.fa-warning:before{content:"\f071"}.fa-database:before{content:"\f1c0"}.fa-arrow-turn-right:before,.fa-mail-forward:before,.fa-share:before{content:"\f064"}.fa-bottle-droplet:before{content:"\e4c4"}.fa-mask-face:before{content:"\e1d7"}.fa-hill-rockslide:before{content:"\e508"}.fa-exchange-alt:before,.fa-right-left:before{content:"\f362"}.fa-paper-plane:before{content:"\f1d8"}.fa-road-circle-exclamation:before{content:"\e565"}.fa-dungeon:before{content:"\f6d9"}.fa-align-right:before{content:"\f038"}.fa-money-bill-1-wave:before,.fa-money-bill-wave-alt:before{content:"\f53b"}.fa-life-ring:before{content:"\f1cd"}.fa-hands:before,.fa-sign-language:before,.fa-signing:before{content:"\f2a7"}.fa-calendar-day:before{content:"\f783"}.fa-ladder-water:before,.fa-swimming-pool:before,.fa-water-ladder:before{content:"\f5c5"}.fa-arrows-up-down:before,.fa-arrows-v:before{content:"\f07d"}.fa-face-grimace:before,.fa-grimace:before{content:"\f57f"}.fa-wheelchair-alt:before,.fa-wheelchair-move:before{content:"\e2ce"}.fa-level-down-alt:before,.fa-turn-down:before{content:"\f3be"}.fa-person-walking-arrow-right:before{content:"\e552"}.fa-envelope-square:before,.fa-square-envelope:before{content:"\f199"}.fa-dice:before{content:"\f522"}.fa-bowling-ball:before{content:"\f436"}.fa-brain:before{content:"\f5dc"}.fa-band-aid:before,.fa-bandage:before{content:"\f462"}.fa-calendar-minus:before{content:"\f272"}.fa-circle-xmark:before,.fa-times-circle:before,.fa-xmark-circle:before{content:"\f057"}.fa-gifts:before{content:"\f79c"}.fa-hotel:before{content:"\f594"}.fa-earth-asia:before,.fa-globe-asia:before{content:"\f57e"}.fa-id-card-alt:before,.fa-id-card-clip:before{content:"\f47f"}.fa-magnifying-glass-plus:before,.fa-search-plus:before{content:"\f00e"}.fa-thumbs-up:before{content:"\f164"}.fa-user-clock:before{content:"\f4fd"}.fa-allergies:before,.fa-hand-dots:before{content:"\f461"}.fa-file-invoice:before{content:"\f570"}.fa-window-minimize:before{content:"\f2d1"}.fa-coffee:before,.fa-mug-saucer:before{content:"\f0f4"}.fa-brush:before{content:"\f55d"}.fa-mask:before{content:"\f6fa"}.fa-magnifying-glass-minus:before,.fa-search-minus:before{content:"\f010"}.fa-ruler-vertical:before{content:"\f548"}.fa-user-alt:before,.fa-user-large:before{content:"\f406"}.fa-train-tram:before{content:"\e5b4"}.fa-user-nurse:before{content:"\f82f"}.fa-syringe:before{content:"\f48e"}.fa-cloud-sun:before{content:"\f6c4"}.fa-stopwatch-20:before{content:"\e06f"}.fa-square-full:before{content:"\f45c"}.fa-magnet:before{content:"\f076"}.fa-jar:be
fore{content:"\e516"}.fa-note-sticky:before,.fa-sticky-note:before{content:"\f249"}.fa-bug-slash:before{content:"\e490"}.fa-arrow-up-from-water-pump:before{content:"\e4b6"}.fa-bone:before{content:"\f5d7"}.fa-user-injured:before{content:"\f728"}.fa-face-sad-tear:before,.fa-sad-tear:before{content:"\f5b4"}.fa-plane:before{content:"\f072"}.fa-tent-arrows-down:before{content:"\e581"}.fa-exclamation:before{content:"\21"}.fa-arrows-spin:before{content:"\e4bb"}.fa-print:before{content:"\f02f"}.fa-try:before,.fa-turkish-lira-sign:before,.fa-turkish-lira:before{content:"\e2bb"}.fa-dollar-sign:before,.fa-dollar:before,.fa-usd:before{content:"\24"}.fa-x:before{content:"\58"}.fa-magnifying-glass-dollar:before,.fa-search-dollar:before{content:"\f688"}.fa-users-cog:before,.fa-users-gear:before{content:"\f509"}.fa-person-military-pointing:before{content:"\e54a"}.fa-bank:before,.fa-building-columns:before,.fa-institution:before,.fa-museum:before,.fa-university:before{content:"\f19c"}.fa-umbrella:before{content:"\f0e9"}.fa-trowel:before{content:"\e589"}.fa-d:before{content:"\44"}.fa-stapler:before{content:"\e5af"}.fa-masks-theater:before,.fa-theater-masks:before{content:"\f630"}.fa-kip-sign:before{content:"\e1c4"}.fa-hand-point-left:before{content:"\f0a5"}.fa-handshake-alt:before,.fa-handshake-simple:before{content:"\f4c6"}.fa-fighter-jet:before,.fa-jet-fighter:before{content:"\f0fb"}.fa-share-alt-square:before,.fa-square-share-nodes:before{content:"\f1e1"}.fa-barcode:before{content:"\f02a"}.fa-plus-minus:before{content:"\e43c"}.fa-video-camera:before,.fa-video:before{content:"\f03d"}.fa-graduation-cap:before,.fa-mortar-board:before{content:"\f19d"}.fa-hand-holding-medical:before{content:"\e05c"}.fa-person-circle-check:before{content:"\e53e"}.fa-level-up-alt:before,.fa-turn-up:before{content:"\f3bf"}
.fa-sr-only,.fa-sr-only-focusable:not(:focus),.sr-only,.sr-only-focusable:not(:focus){position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}:host,:root{--fa-style-family-brands:"Font Awesome 6 Brands";--fa-font-brands:normal 400 1em/1 "Font Awesome 6 Brands"}@font-face{font-family:"Font Awesome 6 Brands";font-style:normal;font-weight:400;font-display:block;src:url(../webfonts/fa-brands-400.woff2) format("woff2"),url(../webfonts/fa-brands-400.ttf) format("truetype")}.fa-brands,.fab{font-weight:400}.fa-monero:before{content:"\f3d0"}.fa-hooli:before{content:"\f427"}.fa-yelp:before{content:"\f1e9"}.fa-cc-visa:before{content:"\f1f0"}.fa-lastfm:before{content:"\f202"}.fa-shopware:before{content:"\f5b5"}.fa-creative-commons-nc:before{content:"\f4e8"}.fa-aws:before{content:"\f375"}.fa-redhat:before{content:"\f7bc"}.fa-yoast:before{content:"\f2b1"}.fa-cloudflare:before{content:"\e07d"}.fa-ups:before{content:"\f7e0"}.fa-wpexplorer:before{content:"\f2de"}.fa-dyalog:before{content:"\f399"}.fa-bity:before{content:"\f37a"}.fa-stackpath:before{content:"\f842"}.fa-buysellads:before{content:"\f20d"}.fa-first-order:before{content:"\f2b0"}.fa-modx:before{content:"\f285"}.fa-guilded:before{content:"\e07e"}.fa-vnv:before{content:"\f40b"}.fa-js-square:before,.fa-square-js:before{content:"\f3b9"}.fa-microsoft:before{content:"\f3ca"}.fa-qq:before{content:"\f1d6"}.fa-orcid:before{content:"\f8d2"}.fa-java:before{content:"\f4e4"}.fa-invision:before{content:"\f7b0"}.fa-creative-commons-pd-alt:before{content:"\f4ed"}.fa-centercode:before{content:"\f380"}.fa-glide-g:before{content:"\f2a6"}.fa-drupal:before{content:"\f1a9"}.fa-hire-a-helper:before{content:"\f3b0"}.fa-creative-commons-by:before{content:"\f4e7"}.fa-unity:before{content:"\e049"}.fa-whmcs:before{content:"\f40d"}.fa-rocketchat:before{content:"\f3e8"}.fa-vk:before{content:"\f189"}.fa-untappd:before{content:"\f405"}.fa-mailchimp:before{content:"\f59e"}.fa-css3-alt:before{content:"\f38b"}.fa-reddit-square:before,.fa-square-reddit:before{content:"\f1a2"}.fa-vimeo-v:before{content:"\f27d"}.fa-contao:before{content:"\f26d"}.fa-square-font-awesome:before{content:"\e5ad"}.fa-deskpro:before{content:"\f38f"}.fa-sistrix:before{content:"\f3ee"}.fa-instagram-square:before,.fa-square-instagram:before{content:"\e055"}.fa-battle-net:before{content:"\f835"}.fa-the-red-yeti:before{content:"\f69d"}.fa-hacker-news-square:before,.fa-square-hacker-news:before{content:"\f3af"}.fa-edge:before{content:"\f282"}.fa-napster:before{content:"\f3d2"}.fa-snapchat-square:before,.fa-square-snapchat:before{content:"\f2ad"}.fa-google-plus-g:before{content:"\f0d5"}.fa-artstation:before{content:"\f77a"}.fa-markdown:before{content:"\f60f"}.fa-sourcetree:before{content:"\f7d3"}.fa-google-plus:before{content:"\f2b3"}.fa-diaspora:before{content:"\f791"}.fa-foursquare:before{content:"\f180"}.fa-stack-overflow:before{content:"\f16c"}.fa-github-alt:before{content:"\f113"}.fa-phoenix-squadron:before{content:"\f511"}.fa-pagelines:before{content:"\f18c"}.fa-algolia:before{content:"\f36c"}.fa-red-river:before{content:"\f3e3"}.fa-creative-commons-sa:before{content:"\f4ef"}.fa-safari:before{content:"\f267"}.fa-google:before{content:"\f1a0"}.fa-font-awesome-alt:before,.fa-square-font-awesome-stroke:before{content:"\f35c"}.fa-atlassian:before{content:"\f77b"}.fa-linkedin-in:before{content:"\f0e1"}.fa-digital-ocean:before{content:"\f391"}.fa-nimblr:before{content:"\f5a8"}.fa-chromecast:before{content:"\f838"}.fa-evernote:before{content:"\f839"}.fa-hacker-news:before{content:"\f1d4"}.fa-creative-commons-sampling:before{content:"\f4f0"}.fa-adversal:before{content:"\f36a"}.fa-creative-commons:before{content:"\f25e"}.fa-watchman-monitoring:before{content:"\e087"}.fa-fonticons:before{content:"\f280"}.fa-weixin:before{content:"\f1d7"}.fa-shirtsinbulk:before{content:"\f214"}.fa-codepen:before{content:"\f1cb"}.fa-git-alt:before{content:"\f841"}.fa-lyft:before{content:"\f3c3"}.fa-rev:before{content:"\f5b2"}.fa-windows:before{content:"\f17a"}.fa-wizards-of-the-coast:before{content:"\f730"}.fa-square-viadeo:before,.fa-viadeo-square:before{content:"\f2aa"}.fa-meetup:before{content:"\f2e0"}.fa-centos:before{content:"\f789"}.fa-adn:before{content:"\f170"}.fa-cloudsmith:before{content:"\f384"}.fa-pied-piper-alt:before{content:"\f1a8"}.fa-dribbble-square:before,.fa-square-dribbble:before{content:"\f397"}.fa-codiepie:before{content:"\f284"}.fa-node:before{content:"\f419"}.fa-mix:before{content:"\f3cb"}.fa-steam:before{content:"\f1b6"}.fa-cc-apple-pay:before{content:"\f416"}.fa-scribd:before{content:"\f28a"}.fa-openid:before{content:"\f19b"}.fa-instalod:before{content:"\e081"}.fa-expeditedssl:before{content:"\f23e"}.fa-sellcast:before{content:"\f2da"}.fa-square-twitter:before,.fa-twitter-square:before{content:"\f081"}.fa-r-project:before{content:"\f4f7"}.fa-delicious:before{content:"\f1a5"}.fa-freebsd:before{content:"\f3a4"}.fa-vuejs:before{content:"\f41f"}.fa-accusoft:before{content:"\f369"}.fa-ioxhost:before{content:"\f208"}.fa-fonticons-fi:before{content:"\f3a2"}.fa-app-store:before{content:"\f36f"}.fa-cc-mastercard:before{content:"\f1f1"}.fa-itunes-note:before{content:"\f3b5"}.fa-golang:before{content:"\e40f"}.fa-kickstarter:before{content:"\f3bb"}.fa-grav:before{content:"\f2d6"}.fa-weibo:before{content:"\f18a"}.fa-uncharted:before{content:"\e084"}.fa-firstdraft:before{content:"\f3a1"}.fa-square-youtube:before,.fa-youtube-square:before{content:"\f431"}.fa-wikipedia-w:before{content:"\f266"}.fa-rendact:before,.fa-wpressr:before{content:"\f3e4"}.fa-angellist:before{content:"\f209"}.fa-galactic-republic:before{content:"\f50c"}.fa-nfc-directional:before{content:"\e530"}.fa-skype:before{content:"\f17e"}.fa-joget:before{content:"\f3b7"}.fa-fedora:before{content:"\f798"}.fa-stripe-s:before{content:"\f42a"}.fa-meta:before{content:"\e49b"}.fa-laravel:before{content:"\f3bd"}.fa-hotjar:before{content:"\f3b1"}.fa-bluetooth-b:before{content:"\f294"}.fa-sticker-mule:before{content:"\f3f7"}.fa-creative-commons-zero:before{content:"\f4f3"}.fa-hips:before{content:"\f452"}.fa-behance:before{content:"\f1b4"}.fa-reddit:before{content:"\f1a1"}.fa-discord:before{content:"\f392"}.fa-chrome:before{content:"\f268"}.fa-app-store-ios:before{content:"\f370"}.fa-cc-discover:before{content:"\f1f2"}.fa-wpbeginner:before{content:"\f297"}.fa-confluence:before{content:"\f78d"}.fa-mdb:before{content:"\f8ca"}.fa-dochub:before{content:"\f394"}.fa-accessible-icon:before{content:"\f368"}.fa-ebay:before{content:"\f4f4"}.fa-amazon:before{content:"\f270"}.fa-unsplash:before{content:"\e07c"}.fa-yarn:before{content:"\f7e3"}.fa-square-steam:before,.fa-steam-square:before{content:"\f1b7"}.fa-500px:before{content:"\f26e"}.fa-square-vimeo:before,.fa-vimeo-square:before{content:"\f194"}.fa-asymmetrik:before{content:"\f372"}.fa-font-awesome-flag:before,.fa-font-awesome-logo-full:before,.fa-font-awesome:before{content:"\f2b4"}.fa-gratipay:before{content:"\f184"}.fa-apple:before{content:"\f179"}.fa-hive:before{content:"\e07f"}.fa-gitkraken:before{content:"\f3a6"}.fa-keybase:before{content:"\f4f5"}.fa-apple-pay:before{content:"\f415"}.fa-padlet:before{content:"\e4a0"}.fa-amazon-pay:before{content:"\f42c"}.fa-github-square:before,.fa-square-github:before{content:"\f092"}.fa-stumbleupon:before{content:"\f1a4"}.fa-fedex:before{content:"\f797"}.fa-phoenix-framework:before{content:"\f3dc"}.fa-shopify:before{content:"\e057"}.fa-neos:before{content:"\f612"}.fa-hackerrank:before{content:"\f5f7"}.fa-researchgate:before{content:"\f4f8"}.fa-swift:before{content:"\f8e1"}.fa-angular:before{content:"\f420"}.fa-speakap:before{content:"\f3f3"}.fa-angrycreative:before{content:"\f36e"}.fa-y-combinator:before{content:"\f23b"}.fa-empire:before{content:"\f1d1"}.fa-envira:before{content:"\f299"}.fa-gitlab-square:before,.fa-square-gitlab:before{content:"\e5ae"}.fa-studiovinari:before{content:"\f3f8"}.fa-pied-piper:before{content:"\f2ae"}.fa-wordpress:before{content:"\f19a"}.fa-product-hunt:before{content:"\f288"}.fa-firefox:before{content:"\f269"}.fa-linode:before{content:"\f2b8"}.fa-goodreads:before{content:"\f3a8"}.fa-odnoklassniki-square:before,.fa-square-odnoklassniki:before{content:"\f264"}.fa-jsfiddle:before{content:"\f1cc"}.fa-sith:before{content:"\f512"}.fa-themeisle:before{content:"\f2b2"}.fa-page4:before{content:"\f3d7"}.fa-hashnode:before{content:"\e499"}.fa-react:before{content:"\f41b"}.fa-cc-paypal:before{content:"\f1f4"}.fa-squarespace:before{content:"\f5be"}.fa-cc-stripe:before{content:"\f1f5"}.fa-creative-commons-share:before{content:"\f4f2"}.fa-bitcoin:before{content:"\f379"}.fa-keycdn:before{content:"\f3ba"}.fa-opera:before{content:"\f26a"}.fa-itch-io:before{content:"\f83a"}.fa-umbraco:before{content:"\f8e8"}.fa-galactic-senate:before{content:"\f50d"}.fa-ubuntu:before{content:"\f7df"}.fa-draft2digital:before{content:"\f396"}.fa-stripe:before{content:"\f429"}.fa-houzz:before{content:"\f27c"}.fa-gg:before{content:"\f260"}.fa-dhl:before{content:"\f790"}.fa-pinterest-square:before,.fa-square-pinterest:before{content:"\f0d3"}.fa-xing:before{content:"\f168"}.fa-blackberry:before{content:"\f37b"}.fa-creative-commons-pd:before{content:"\f4ec"}.fa-playstation:before{content:"\f3df"}.fa-quinscape:before{content:"\f459"}.fa-less:before{content:"\f41d"}.fa-blogger-b:before{content:"\f37d"}.fa-opencart:before{content:"\f23d"}.fa-vine:before{content:"\f1ca"}.fa-paypal:before{content:"\f1ed"}.fa-gitlab:before{content:"\f296"}.fa-typo3:before{content:"\f42b"}.fa-reddit-alien:before{content:"\f281"}.fa-yahoo:before{content:"\f19e"}.fa-dailymotion:before{content:"\e052"}.fa-affiliatetheme:before{content:"\f36b"}.fa-pied-piper-pp:before{content:"\f1a7"}.fa-bootstrap:before{content:"\f836"}.fa-odnoklassniki:before{content:"\f263"}.fa-nfc-symbol:before{content:"\e531"}.fa-ethereum:before{content:"\f42e"}.fa-speaker-deck:before{content:"\f83c"}.fa-creative-commons-nc-eu:before{content:"\f4e9"}.fa-patreon:before{content:"\f3d9"}.fa-avianex:before{content:"\f374"}.fa-ello:before{content:"\f5f1"}.fa-gofore:before{content:"\f3a7"}.fa-bimobject:before{content:"\f378"}.fa-facebook-f:before{content:"\f39e"}.fa-google-plus-square:before,.fa-square-google-plus:before{content:"\f0d4"}.fa-mandalorian:before{content:"\f50f"}.fa-first-order-alt:before{content:"\f50a"}.fa-osi:before{content:"\f41a"}.fa-google-wallet:before{content:"\f1ee"}.fa-d-and-d-beyond:before{content:"\f6ca"}.fa-periscope:before{content:"\f3da"}.fa-fulcrum:before{content:"\f50b"}.fa-cloudscale:before{content:"\f383"}.fa-forumbee:before{content:"\f211"}.fa-mizuni:before{content:"\f3cc"}.fa-schlix:before{content:"\f3ea"}.fa-square-xing:before,.fa-xing-square:before{content:"\f169"}.fa-bandcamp:before{content:"\f2d5"}.fa-wpforms:before{content:"\f298"}.fa-cloudversify:before{content:"\f385"}.fa-usps:before{content:"\f7e1"}.fa-megaport:before{content:"\f5a3"}.fa-magento:before{content:"\f3c4"}.fa-spotify:before{content:"\f1bc"}.fa-optin-monster:before{content:"\f23c"}.fa-fly:before{content:"\f417"}.fa-aviato:before{content:"\f421"}.fa-itunes:before{content:"\f3b4"}.fa-cuttlefish:before{content:"\f38c"}.fa-blogger:before{content:"\f37c"}.fa-flickr:before{content:"\f16e"}.fa-viber:before{content:"\f409"}.fa-soundcloud:before{content:"\f1be"}.fa-digg:before{content:"\f1a6"}.fa-tencent-weibo:before{content:"\f1d5"}.fa-symfony:before{content:"\f83d"}.fa-maxcdn:before{content:"\f136"}.fa-etsy:before{content:"\f2d7"}.fa-facebook-messenger:before{content:"\f39f"}.fa-audible:before{content:"\f373"}.fa-think-peaks:before{content:"\f731"}.fa-bilibili:before{content:"\e3d9"}.fa-erlang:before{content:"\f39d"}.fa-cotton-bureau:before{content:"\f89e"}.fa-dashcube:before{content:"\f210"}.fa-42-group:before,.fa-innosoft:before{content:"\e080"}.fa-stack-exchange:before{content:"\f18d"}.fa-elementor:before{content:"\f430"}.fa-pied-piper-square:before,.fa-square-pied-piper:before{content:"\e01e"}.fa-creative-commons-nd:before{content:"\f4eb"}.fa-palfed:before{content:"\f3d8"}.fa-superpowers:before{content:"\f2dd"}.fa-resolving:before{content:"\f3e7"}.fa-xbox:before{content:"\f412"}.fa-searchengin:before{content:"\f3eb"}.fa-tiktok:before{content:"\e07b"}.fa-facebook-square:before,.fa-square-facebook:before{content:"\f082"}.fa-renren:before{content:"\f18b"}.fa-linux:before{content:"\f17c"}.fa-glide:before{content:"\f2a5"}.fa-linkedin:before{content:"\f08c"}.fa-hubspot:before{content:"\f3b2"}.fa-deploydog:before{content:"\f38e"}.fa-twitch:before{content:"\f1e8"}.fa-ravelry:before{content:"\f2d9"}.fa-mixer:before{content:"\e056"}.fa-lastfm-square:before,.fa-square-lastfm:before{content:"\f203"}.fa-vimeo:before{content:"\f40a"}.fa-mendeley:before{content:"\f7b3"}.fa-uniregistry:before{content:"\f404"}.fa-figma:before{content:"\f799"}.fa-creative-commons-remix:before{content:"\f4ee"}.fa-cc-amazon-pay:before{content:"\f42d"}.fa-dropbox:before{content:"\f16b"}.fa-instagram:before{content:"\f16d"}.fa-cmplid:before{content:"\e360"}.fa-facebook:before{content:"\f09a"}.fa-gripfire:before{content:"\f3ac"}.fa-jedi-order:before{content:"\f50e"}.fa-uikit:before{content:"\f403"}.fa-fort-awesome-alt:before{content:"\f3a3"}.fa-phabricator:before{content:"\f3db"}.fa-ussunnah:before{content:"\f407"}.fa-earlybirds:before{content:"\f39a"}.fa-trade-federation:before{content:"\f513"}.fa-autoprefixer:before{content:"\f41c"}.fa-whatsapp:before{content:"\f232"}.fa-slideshare:before{content:"\f1e7"}.fa-google-play:before{content:"\f3ab"}.fa-viadeo:before{content:"\f2a9"}.fa-line:before{content:"\f3c0"}.fa-google-drive:before{content:"\f3aa"}.fa-servicestack:before{content:"\f3ec"}.fa-simplybuilt:before{content:"\f215"}.fa-bitbucket:before{content:"\f171"}.fa-imdb:before{content:"\f2d8"}.fa-deezer:before{content:"\e077"}.fa-raspberry-pi:before{content:"\f7bb"}.fa-jira:before{content:"\f7b1"}.fa-docker:before{content:"\f395"}.fa-screenpal:before{content:"\e570"}.fa-bluetooth:before{content:"\f293"}.fa-gitter:before{content:"\f426"}.fa-d-and-d:before{content:"\f38d"}.fa-microblog:before{content:"\e01a"}.fa-cc-diners-club:before{content:"\f24c"}.fa-gg-circle:before{content:"\f261"}.fa-pied-piper-hat:before{content:"\f4e5"}.fa-kickstarter-k:before{content:"\f3bc"}.fa-yandex:before{content:"\f413"}.fa-readme:before{content:"\f4d5"}.fa-html5:before{content:"\f13b"}.fa-sellsy:before{content:"\f213"}.fa-sass:before{content:"\f41e"}.fa-wirsindhandwerk:before,.fa-wsh:before{content:"\e2d0"}.fa-buromobelexperte:before{content:"\f37f"}.fa-salesforce:before{content:"\f83b"}.fa-octopus-deploy:before{content:"\e082"}.fa-medapps:before{content:"\f3c6"}.fa-ns8:before{content:"\f3d5"}.fa-pinterest-p:before{content:"\f231"}.fa-apper:before{content:"\f371"}.fa-fort-awesome:before{content:"\f286"}.fa-waze:before{content:"\f83f"}.fa-cc-jcb:before{content:"\f24b"}.fa-snapchat-ghost:before,.fa-snapchat:before{content:"\f2ab"}.fa-fantasy-flight-games:before{content:"\f6dc"}.fa-rust:before{content:"\e07a"}.fa-wix:before{content:"\f5cf"}.fa-behance-square:before,.fa-square-behance:before{content:"\f1b5"}.fa-supple:before{content:"\f3f9"}.fa-rebel:before{content:"\f1d0"}.fa-css3:before{content:"\f13c"}.fa-staylinked:before{content:"\f3f5"}.fa-kaggle:before{content:"\f5fa"}.fa-space-awesome:before{content:"\e5ac"}.fa-deviantart:before{content:"\f1bd"}.fa-cpanel:before{content:"\f388"}.fa-goodreads-g:before{content:"\f3a9"}.fa-git-square:before,.fa-square-git:before{content:"\f1d2"}.fa-square-tumblr:before,.fa-tumblr-square:before{content:"\f174"}.fa-trello:before{content:"\f181"}.fa-creative-commons-nc-jp:before{content:"\f4ea"}.fa-get-pocket:before{content:"\f265"}.fa-perbyte:before{content:"\e083"}.fa-grunt:before{content:"\f3ad"}.fa-weebly:before{content:"\f5cc"}.fa-connectdevelop:before{content:"\f20e"}.fa-leanpub:before{content:"\f212"}.fa-black-tie:before{content:"\f27e"}.fa-themeco:before{content:"\f5c6"}.fa-python:before{content:"\f3e2"}.fa-android:before{content:"\f17b"}.fa-bots:before{content:"\e340"}.fa-free-code-camp:before{content:"\f2c5"}.fa-hornbill:before{content:"\f592"}.fa-js:before{content:"\f3b8"}.fa-ideal:before{content:"\e013"}.fa-git:before{content:"\f1d3"}.fa-dev:before{content:"\f6cc"}.fa-sketch:before{content:"\f7c6"}.fa-yandex-international:before{content:"\f414"}.fa-cc-amex:before{content:"\f1f3"}.fa-uber:before{content:"\f402"}.fa-github:before{content:"\f09b"}.fa-php:before{content:"\f457"}.fa-alipay:before{content:"\f642"}.fa-youtube:before{content:"\f167"}.fa-skyatlas:before{content:"\f216"}.fa-firefox-browser:before{content:"\e007"}.fa-replyd:before{content:"\f3e6"}.fa-suse:before{content:"\f7d6"}.fa-jenkins:before{content:"\f3b6"}.fa-twitter:before{content:"\f099"}.fa-rockrms:before{content:"\f3e9"}.fa-pinterest:before{content:"\f0d2"}.fa-buffer:before{content:"\f837"}.fa-npm:before{content:"\f3d4"}.fa-yammer:before{content:"\f840"}.fa-btc:before{content:"\f15a"}.fa-dribbble:before{content:"\f17d"}.fa-stumbleupon-circle:before{content:"\f1a3"}.fa-internet-explorer:before{content:"\f26b"}.fa-stubber:before{content:"\e5c7"}.fa-telegram-plane:before,.fa-telegram:before{content:"\f2c6"}.fa-old-republic:before{content:"\f510"}.fa-odysee:before{content:"\e5c6"}.fa-square-whatsapp:before,.fa-whatsapp-square:before{content:"\f40c"}.fa-node-js:before{content:"\f3d3"}.fa-edge-legacy:before{content:"\e078"}.fa-slack-hash:before,.fa-slack:before{content:"\f198"}.fa-medrt:before{content:"\f3c8"}.fa-usb:before{content:"\f287"}.fa-tumblr:before{content:"\f173"}.fa-vaadin:before{content:"\f408"}.fa-quora:before{content:"\f2c4"}.fa-reacteurope:before{content:"\f75d"}.fa-medium-m:before,.fa-medium:before{content:"\f23a"}.fa-amilia:before{content:"\f36d"}.fa-mixcloud:before{content:"\f289"}.fa-flipboard:before{content:"\f44d"}.fa-viacoin:before{content:"\f237"}.fa-critical-role:before{content:"\f6c9"}.fa-sitrox:before{content:"\e44a"}.fa-discourse:before{content:"\f393"}.fa-joomla:before{content:"\f1aa"}.fa-mastodon:before{content:"\f4f6"}.fa-airbnb:before{content:"\f834"}.fa-wolf-pack-battalion:before{content:"\f514"}.fa-buy-n-large:before{content:"\f8a6"}.fa-gulp:before{content:"\f3ae"}.fa-creative-commons-sampling-plus:before{content:"\f4f1"}.fa-strava:before{content:"\f428"}.fa-ember:before{content:"\f423"}.fa-canadian-maple-leaf:before{content:"\f785"}.fa-teamspeak:before{content:"\f4f9"}.fa-pushed:before{content:"\f3e1"}.fa-wordpress-simple:before{content:"\f411"}.fa-nutritionix:before{content:"\f3d6"}.fa-wodu:before{content:"\e088"}.fa-google-pay:before{content:"\e079"}.fa-intercom:before{content:"\f7af"}.fa-zhihu:before{content:"\f63f"}.fa-korvue:before{content:"\f42f"}.fa-pix:before{content:"\e43a"}.fa-steam-symbol:before{content:"\f3f6"}:host,:root{--fa-font-regular:normal 400 1em/1 "Font Awesome 6 Free"}@font-face{font-family:"Font Awesome 6 Free";font-style:normal;font-weight:400;font-display:block;src:url(../webfonts/fa-regular-400.woff2) format("woff2"),url(../webfonts/fa-regular-400.ttf) format("truetype")}.fa-regular,.far{font-weight:400}:host,:root{--fa-style-family-classic:"Font Awesome 6 Free";--fa-font-solid:normal 900 1em/1 "Font Awesome 6 Free"}@font-face{font-family:"Font Awesome 6 Free";font-style:normal;font-weight:900;font-display:block;src:url(fa-solid-900.woff2) format("woff2"),url(fa-solid-900.ttf) format("truetype")}.fa-solid,.fas{font-weight:900}@font-face{font-family:"Font Awesome 5 Brands";font-display:block;font-weight:400;src:url(../webfonts/fa-brands-400.woff2) format("woff2"),url(../webfonts/fa-brands-400.ttf) format("truetype")}@font-face{font-family:"Font Awesome 5 Free";font-display:block;font-weight:900;src:url(../fa-solid-900.woff2) format("woff2"),url(fa-solid-900.ttf) format("truetype")}@font-face{font-family:"Font Awesome 5 Free";font-display:block;font-weight:400;src:url(../webfonts/fa-regular-400.woff2) format("woff2"),url(../webfonts/fa-regular-400.ttf) format("truetype")}@font-face{font-family:"FontAwesome";font-display:block;src:url(fa-solid-900.woff2) format("woff2"),url(fa-solid-900.ttf) format("truetype")}@font-face{font-family:"FontAwesome";font-display:block;src:url(../webfonts/fa-brands-400.woff2) format("woff2"),url(../webfonts/fa-brands-400.ttf) format("truetype")}@font-face{font-family:"FontAwesome";font-display:block;src:url(../webfonts/fa-regular-400.woff2) format("woff2"),url(../webfonts/fa-regular-400.ttf) format("truetype");unicode-range:u+f003,u+f006,u+f014,u+f016-f017,u+f01a-f01b,u+f01d,u+f022,u+f03e,u+f044,u+f046,u+f05c-f05d,u+f06e,u+f070,u+f087-f088,u+f08a,u+f094,u+f096-f097,u+f09d,u+f0a0,u+f0a2,u+f0a4-f0a7,u+f0c5,u+f0c7,u+f0e5-f0e6,u+f0eb,u+f0f6-f0f8,u+f10c,u+f114-f115,u+f118-f11a,u+f11c-f11d,u+f133,u+f147,u+f14e,u+f150-f152,u+f185-f186,u+f18e,u+f190-f192,u+f196,u+f1c1-f1c9,u+f1d9,u+f1db,u+f1e3,u+f1ea,u+f1f7,u+f1f9,u+f20a,u+f247-f248,u+f24a,u+f24d,u+f255-f25b,u+f25d,u+f271-f274,u+f278,u+f27b,u+f28c,u+f28e,u+f29c,u+f2b5,u+f2b7,u+f2ba,u+f2bc,u+f2be,u+f2c0-f2c1,u+f2c3,u+f2d0,u+f2d2,u+f2d4,u+f2dc}@font-face{font-family:"FontAwesome";font-display:block;src:url(../webfonts/fa-v4compatibility.woff2) format("woff2"),url(../webfonts/fa-v4compatibility.ttf) format("truetype");unicode-range:u+f041,u+f047,u+f065-f066,u+f07d-f07e,u+f080,u+f08b,u+f08e,u+f090,u+f09a,u+f0ac,u+f0ae,u+f0b2,u+f0d0,u+f0d6,u+f0e4,u+f0ec,u+f10a-f10b,u+f123,u+f13e,u+f148-f149,u+f14c,u+f156,u+f15e,u+f160-f161,u+f163,u+f175-f178,u+f195,u+f1f8,u+f219,u+f27a}]]></CSP>


<CSPBase64 name="fa-solid-900.woff2" application="/csp/user/" default="1">
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
7fVrJQer3a6OY93trqa++QE2FwfDnZ3hYLGJHzP7se5mJ09m9YJvX2ey2++3Fhdb/f7ui8Y6S2vq
nvOQ4SaF+aE7ad0lRC2KDXpoYKJ9kVRH++s12jfnoSkJ91X1YLrk4ynWUdmcoAGnASqdFDopq5wZ
mpt9Mpva1DJyE4lNLd0H2sARWV8/v5Ze5yB6rhDs2lb/j8X68Pzez8B+VYe98smpqbXrHd3sCcEc
RO+mk9XkVn6+U9NcV+3m3S23+Er3Khne5zL0PENuH5aIbh46FKmTSB7x+A3pbRDn/iv1OSQrJ3Yv
Xbp0qZNoRJ10fEZ5ag/LL92Wf8OtwXJ6avfECjmYoE46nUTb5Cv3cAKP8lcKtB+b9ArdD56O5Vso
3YkszaQfJQuvrIOmo3mvKKGQIk3yckXtaNYpyyua0UcvmoZliuZVBOuN+WROCltuVxfCuXpkmQRF
AOE78QRliFEYia12nf/O7bbcri54seaC2obpecKNIteyttr4ANGImMtqEilzld9cXB7NaW44lBJE
i3tC2JZJDLSpTRz56UDLGiUJR8tsuaugtmEYJmm1HCUrN+bArRD6kECLhxg6jhAa2E4fmUzcRYkQ
WaF8+5VuXDv0Cjk/sdRzXN2WjCFItpYKBFurXyofgPIQu4Rgvnjgm0bH+CaeNVQON1Bx74MaNs1y
I6vKKuKc2y98EUjetAmLY2dimZbAN1imJWZ/jlvCMi2Lcz4bh4ghjjnn1toaIk3dPuwq7CmTZrmH
Nu301z4WHreedpOTJM5NT1PYv65lmVeYTuj97udoza6YliXwjaZlidl/4bJG1LP/wUxYlmlxT8zG
MYkxmX0rJjGOhcctwBwFjOBEefzrbnYLyUK4pBs2sMLbnIDNGoLdfjsTwvUQnT/4A4Og95W41//g
D/DJVqHnW97iITpMCO+979v+Y299q/v27u773jseYypxMYq8N66W+Rg7bDuCc9cgzmtXiu9rHWK4
nAvn8mV8mWsQxxGc//sr3ci398p/51w4DjHcz30O+srFgZaJjBaqCGQWRxFz+Ow7v2xx8WwaMYdj
/Mug0NVB6M8+7jszQajwXozJf5BkDSCAY+jADQBhnOOpXfZwB1uIcEdSCjyupB1a2JavvoM6ifyN
JnqnvPIlheTzcxqnHYXpNIZwzX4LsZW2nRNA850es7Szs7RcMh5hp77thImw3Q4FS/Zxn/OtNsFN
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
</CSPBase64>


<CSP name="jquery-3.7.1.js" application="/csp/user/" default="1"><![CDATA[
/*!
 * jQuery JavaScript Library v3.7.1
 * https://jquery.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2023-08-28T13:37Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket trac-14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var version = "3.7.1",

	rhtmlSuffix = /HTML$/i,

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},


	// Retrieve the text value of an array of DOM nodes
	text: function( elem ) {
		var node,
			ret = "",
			i = 0,
			nodeType = elem.nodeType;

		if ( !nodeType ) {

			// If no nodeType, this is expected to be an array
			while ( ( node = elem[ i++ ] ) ) {

				// Do not traverse comment nodes
				ret += jQuery.text( node );
			}
		}
		if ( nodeType === 1 || nodeType === 11 ) {
			return elem.textContent;
		}
		if ( nodeType === 9 ) {
			return elem.documentElement.textContent;
		}
		if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}

		// Do not include comment or processing instruction nodes

		return ret;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	isXMLDoc: function( elem ) {
		var namespace = elem && elem.namespaceURI,
			docElem = elem && ( elem.ownerDocument || elem ).documentElement;

		// Assume HTML when documentElement doesn't yet exist, such as inside
		// document fragments.
		return !rhtmlSuffix.test( namespace || docElem && docElem.nodeName || "HTML" );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}


function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var pop = arr.pop;


var sort = arr.sort;


var splice = arr.splice;


var whitespace = "[\\x20\\t\\r\\n\\f]";


var rtrimCSS = new RegExp(
	"^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$",
	"g"
);




// Note: an element does not contain itself
jQuery.contains = function( a, b ) {
	var bup = b && b.parentNode;

	return a === bup || !!( bup && bup.nodeType === 1 && (

		// Support: IE 9 - 11+
		// IE doesn't have `contains` on SVG.
		a.contains ?
			a.contains( bup ) :
			a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
	) );
};




// CSS string/identifier serialization
// https://drafts.csswg.org/cssom/#common-serializing-idioms
var rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;

function fcssescape( ch, asCodePoint ) {
	if ( asCodePoint ) {

		// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
		if ( ch === "\0" ) {
			return "\uFFFD";
		}

		// Control characters and (dependent upon position) numbers get escaped as code points
		return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
	}

	// Other potentially-special ASCII characters get backslash-escaped
	return "\\" + ch;
}

jQuery.escapeSelector = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};




var preferredDoc = document,
	pushNative = push;

( function() {

var i,
	Expr,
	outermostContext,
	sortInput,
	hasDuplicate,
	push = pushNative,

	// Local document vars
	document,
	documentElement,
	documentIsHTML,
	rbuggyQSA,
	matches,

	// Instance-specific data
	expando = jQuery.expando,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|" +
		"loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: https://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rleadingCombinator = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" +
		whitespace + "*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		ID: new RegExp( "^#(" + identifier + ")" ),
		CLASS: new RegExp( "^\\.(" + identifier + ")" ),
		TAG: new RegExp( "^(" + identifier + "|[*])" ),
		ATTR: new RegExp( "^" + attributes ),
		PSEUDO: new RegExp( "^" + pseudos ),
		CHILD: new RegExp(
			"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
				whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
				whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		bool: new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		needsContext: new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// https://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		if ( nonHex ) {

			// Strip the backslash prefix from a non-hex escape sequence
			return nonHex;
		}

		// Replace a hexadecimal escape sequence with the encoded Unicode code point
		// Support: IE <=11+
		// For values outside the Basic Multilingual Plane (BMP), manually construct a
		// surrogate pair
		return high < 0 ?
			String.fromCharCode( high + 0x10000 ) :
			String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes; see `setDocument`.
	// Support: IE 9 - 11+, Edge 12 - 18+
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE/Edge.
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && nodeName( elem, "fieldset" );
		},
		{ dir: "parentNode", next: "legend" }
	);

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android <=4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = {
		apply: function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		},
		call: function( target ) {
			pushNative.apply( target, slice.call( arguments, 1 ) );
		}
	};
}

function find( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE 9 only
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								push.call( results, elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE 9 only
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							find.contains( context, elem ) &&
							elem.id === m ) {

							push.call( results, elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && context.getElementsByClassName ) {
					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( !nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rleadingCombinator.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when
					// strict-comparing two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( newContext != context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = jQuery.escapeSelector( nid );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrimCSS, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties
		// (see https://github.com/jquery/sizzle/issues/157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by jQuery selector module
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		return nodeName( elem, "input" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		return ( nodeName( elem, "input" ) || nodeName( elem, "button" ) ) &&
			elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11+
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					elem.isDisabled !== !disabled &&
						inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a jQuery selector context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [node] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
function setDocument( node ) {
	var subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	documentElement = document.documentElement;
	documentIsHTML = !jQuery.isXMLDoc( document );

	// Support: iOS 7 only, IE 9 - 11+
	// Older browsers didn't support unprefixed `matches`.
	matches = documentElement.matches ||
		documentElement.webkitMatchesSelector ||
		documentElement.msMatchesSelector;

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors
	// (see trac-13936).
	// Limit the fix to IE & Edge Legacy; despite Edge 15+ implementing `matches`,
	// all IE 9+ and Edge Legacy versions implement `msMatchesSelector` as well.
	if ( documentElement.msMatchesSelector &&

		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 9 - 11+, Edge 12 - 18+
		subWindow.addEventListener( "unload", unloadHandler );
	}

	// Support: IE <10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		documentElement.appendChild( el ).id = jQuery.expando;
		return !document.getElementsByName ||
			!document.getElementsByName( jQuery.expando ).length;
	} );

	// Support: IE 9 only
	// Check to see if it's possible to do matchesSelector
	// on a disconnected node.
	support.disconnectedMatch = assert( function( el ) {
		return matches.call( el, "*" );
	} );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// IE/Edge don't support the :scope pseudo-class.
	support.scope = assert( function() {
		return document.querySelectorAll( ":scope" );
	} );

	// Support: Chrome 105 - 111 only, Safari 15.4 - 16.3 only
	// Make sure the `:has()` argument is parsed unforgivingly.
	// We include `*` in the test to detect buggy implementations that are
	// _selectively_ forgiving (specifically when the list includes at least
	// one valid selector).
	// Note that we treat complete lack of support for `:has()` as if it were
	// spec-compliant support, which is fine because use of `:has()` in such
	// environments will fail in the qSA path and fall back to jQuery traversal
	// anyway.
	support.cssHas = assert( function() {
		try {
			document.querySelector( ":has(*,:jqfake)" );
			return false;
		} catch ( e ) {
			return true;
		}
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter.ID = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find.ID = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter.ID =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find.ID = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find.TAG = function( tag, context ) {
		if ( typeof context.getElementsByTagName !== "undefined" ) {
			return context.getElementsByTagName( tag );

		// DocumentFragment nodes don't have gEBTN
		} else {
			return context.querySelectorAll( tag );
		}
	};

	// Class
	Expr.find.CLASS = function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	rbuggyQSA = [];

	// Build QSA regex
	// Regex strategy adopted from Diego Perini
	assert( function( el ) {

		var input;

		documentElement.appendChild( el ).innerHTML =
			"<a id='" + expando + "' href='' disabled='disabled'></a>" +
			"<select id='" + expando + "-\r\\' disabled='disabled'>" +
			"<option selected=''></option></select>";

		// Support: iOS <=7 - 8 only
		// Boolean attributes and "value" are not treated correctly in some XML documents
		if ( !el.querySelectorAll( "[selected]" ).length ) {
			rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
		}

		// Support: iOS <=7 - 8 only
		if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
			rbuggyQSA.push( "~=" );
		}

		// Support: iOS 8 only
		// https://bugs.webkit.org/show_bug.cgi?id=136851
		// In-page `selector#id sibling-combinator selector` fails
		if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
			rbuggyQSA.push( ".#.+[+~]" );
		}

		// Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+
		// In some of the document kinds, these selectors wouldn't work natively.
		// This is probably OK but for backwards compatibility we want to maintain
		// handling them through jQuery traversal in jQuery 3.x.
		if ( !el.querySelectorAll( ":checked" ).length ) {
			rbuggyQSA.push( ":checked" );
		}

		// Support: Windows 8 Native Apps
		// The type and name attributes are restricted during .innerHTML assignment
		input = document.createElement( "input" );
		input.setAttribute( "type", "hidden" );
		el.appendChild( input ).setAttribute( "name", "D" );

		// Support: IE 9 - 11+
		// IE's :disabled selector does not pick up the children of disabled fieldsets
		// Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+
		// In some of the document kinds, these selectors wouldn't work natively.
		// This is probably OK but for backwards compatibility we want to maintain
		// handling them through jQuery traversal in jQuery 3.x.
		documentElement.appendChild( el ).disabled = true;
		if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
			rbuggyQSA.push( ":enabled", ":disabled" );
		}

		// Support: IE 11+, Edge 15 - 18+
		// IE 11/Edge don't find elements on a `[name='']` query in some cases.
		// Adding a temporary attribute to the document before the selection works
		// around the issue.
		// Interestingly, IE 10 & older don't seem to have the issue.
		input = document.createElement( "input" );
		input.setAttribute( "name", "" );
		el.appendChild( input );
		if ( !el.querySelectorAll( "[name='']" ).length ) {
			rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
				whitespace + "*(?:''|\"\")" );
		}
	} );

	if ( !support.cssHas ) {

		// Support: Chrome 105 - 110+, Safari 15.4 - 16.3+
		// Our regular `try-catch` mechanism fails to detect natively-unsupported
		// pseudo-classes inside `:has()` (such as `:has(:contains("Foo"))`)
		// in browsers that parse the `:has()` argument as a forgiving selector list.
		// https://drafts.csswg.org/selectors/#relational now requires the argument
		// to be parsed unforgivingly, but browsers have not yet fully adjusted.
		rbuggyQSA.push( ":has" );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a === document || a.ownerDocument == preferredDoc &&
				find.contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b === document || b.ownerDocument == preferredDoc &&
				find.contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	};

	return document;
}

find.matches = function( expr, elements ) {
	return find( expr, null, null, elements );
};

find.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyQSA || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return find( expr, document, null, [ elem ] ).length > 0;
};

find.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return jQuery.contains( context, elem );
};


find.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (see trac-13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	if ( val !== undefined ) {
		return val;
	}

	return elem.getAttribute( name );
};

find.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
jQuery.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	//
	// Support: Android <=4.0+
	// Testing for detecting duplicates is unpredictable so instead assume we can't
	// depend on duplicate detection in all browsers without a stable sort.
	hasDuplicate = !support.sortStable;
	sortInput = !support.sortStable && slice.call( results, 0 );
	sort.call( results, sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			splice.call( results, duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

jQuery.fn.uniqueSort = function() {
	return this.pushStack( jQuery.uniqueSort( slice.apply( this ) ) );
};

Expr = jQuery.expr = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		ATTR: function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] || match[ 5 ] || "" )
				.replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		CHILD: function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					find.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" )
				);
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

			// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				find.error( match[ 0 ] );
			}

			return match;
		},

		PSEUDO: function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr.CHILD.test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		TAG: function( nodeNameSelector ) {
			var expectedNodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return nodeName( elem, expectedNodeName );
				};
		},

		CLASS: function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace + ")" + className +
					"(" + whitespace + "|$)" ) ) &&
				classCache( className, function( elem ) {
					return pattern.test(
						typeof elem.className === "string" && elem.className ||
							typeof elem.getAttribute !== "undefined" &&
								elem.getAttribute( "class" ) ||
							""
					);
				} );
		},

		ATTR: function( name, operator, check ) {
			return function( elem ) {
				var result = find.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				if ( operator === "=" ) {
					return result === check;
				}
				if ( operator === "!=" ) {
					return result !== check;
				}
				if ( operator === "^=" ) {
					return check && result.indexOf( check ) === 0;
				}
				if ( operator === "*=" ) {
					return check && result.indexOf( check ) > -1;
				}
				if ( operator === "$=" ) {
					return check && result.slice( -check.length ) === check;
				}
				if ( operator === "~=" ) {
					return ( " " + result.replace( rwhitespace, " " ) + " " )
						.indexOf( check ) > -1;
				}
				if ( operator === "|=" ) {
					return result === check || result.slice( 0, check.length + 1 ) === check + "-";
				}

				return false;
			};
		},

		CHILD: function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										nodeName( node, name ) :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || ( parent[ expando ] = {} );
							cache = outerCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {
								outerCache = elem[ expando ] || ( elem[ expando ] = {} );
								cache = outerCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										nodeName( node, name ) :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );
											outerCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		PSEUDO: function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// https://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					find.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as jQuery does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf.call( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		not: markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrimCSS, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element
					// (see https://github.com/jquery/sizzle/issues/299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		has: markFunction( function( selector ) {
			return function( elem ) {
				return find( selector, elem ).length > 0;
			};
		} ),

		contains: markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || jQuery.text( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// https://www.w3.org/TR/selectors/#lang-pseudo
		lang: markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				find.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		target: function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		root: function( elem ) {
			return elem === documentElement;
		},

		focus: function( elem ) {
			return elem === safeActiveElement() &&
				document.hasFocus() &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		enabled: createDisabledPseudo( false ),
		disabled: createDisabledPseudo( true ),

		checked: function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// https://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			return ( nodeName( elem, "input" ) && !!elem.checked ) ||
				( nodeName( elem, "option" ) && !!elem.selected );
		},

		selected: function( elem ) {

			// Support: IE <=11+
			// Accessing the selectedIndex property
			// forces the browser to treat the default option as
			// selected when in an optgroup.
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		empty: function( elem ) {

			// https://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		parent: function( elem ) {
			return !Expr.pseudos.empty( elem );
		},

		// Element/input types
		header: function( elem ) {
			return rheader.test( elem.nodeName );
		},

		input: function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		button: function( elem ) {
			return nodeName( elem, "input" ) && elem.type === "button" ||
				nodeName( elem, "button" );
		},

		text: function( elem ) {
			var attr;
			return nodeName( elem, "input" ) && elem.type === "text" &&

				// Support: IE <10 only
				// New HTML5 attribute values (e.g., "search") appear
				// with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		first: createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		last: createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		eq: createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		even: createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		odd: createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		lt: createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i;

			if ( argument < 0 ) {
				i = argument + length;
			} else if ( argument > length ) {
				i = length;
			} else {
				i = argument;
			}

			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		gt: createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos.nth = Expr.pseudos.eq;

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

function tokenize( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rleadingCombinator.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrimCSS, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	if ( parseOnly ) {
		return soFar.length;
	}

	return soFar ?
		find.error( selector ) :

		// Cache the tokens
		tokenCache( selector, groups ).slice( 0 );
}

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						if ( skip && nodeName( elem, skip ) ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = outerCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							outerCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		find( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem, matcherOut,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed ||
				multipleContexts( selector || "*",
					context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems;

		if ( matcher ) {

			// If we have a postFinder, or filtered seed, or non-seed postFilter
			// or preexisting results,
			matcherOut = postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

				// ...intermediate processing is necessary
				[] :

				// ...otherwise use results directly
				results;

			// Find primary matches
			matcher( matcherIn, matcherOut, context, xml );
		} else {
			matcherOut = matcherIn;
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf.call( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf.call( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			var ret = ( !leadingRelative && ( xml || context != outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element
			// (see https://github.com/jquery/sizzle/issues/299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 )
							.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrimCSS, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find.TAG( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: iOS <=7 - 9 only
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching
			// elements by id. (see trac-14142)
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							push.call( results, elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					jQuery.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

function compile( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
}

/**
 * A low-level selection function that works with jQuery's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with jQuery selector compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
function select( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find.ID(
				token.matches[ 0 ].replace( runescape, funescape ),
				context
			) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr.needsContext.test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) &&
						testContext( context.parentNode ) || context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
}

// One-time assignments

// Support: Android <=4.0 - 4.1+
// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Initialize against the default document
setDocument();

// Support: Android <=4.0 - 4.1+
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

jQuery.find = find;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.unique = jQuery.uniqueSort;

// These have always been private, but they used to be documented as part of
// Sizzle so let's maintain them for now for backwards compatibility purposes.
find.compile = compile;
find.select = select;
find.setDocument = setDocument;
find.tokenize = tokenize;

find.escape = jQuery.escapeSelector;
find.getText = jQuery.text;
find.isXML = jQuery.isXMLDoc;
find.selectors = jQuery.expr;
find.support = jQuery.support;
find.uniqueSort = jQuery.uniqueSort;

	/* eslint-enable */

} )();


var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)
	// Strict HTML recognition (trac-11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to jQuery#find
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.error );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the error, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getErrorHook ) {
									process.error = jQuery.Deferred.getErrorHook();

								// The deprecated alias of the above. While the name suggests
								// returning the stack, not an error instance, jQuery just passes
								// it directly to `console.warn` so both will work; an instance
								// just better cooperates with source maps.
								} else if ( jQuery.Deferred.getStackHook ) {
									process.error = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

// If `jQuery.Deferred.getErrorHook` is defined, `asyncError` is an error
// captured before the async barrier to get the original error cause
// which may otherwise be hidden.
jQuery.Deferred.exceptionHook = function( error, asyncError ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message,
			error.stack, asyncError );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See trac-6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (trac-9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see trac-8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (trac-14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (trac-11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (trac-14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (trac-13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (trac-15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (trac-12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (trac-13208)
				// Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (trac-13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", true );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, isSetup ) {

	// Missing `isSetup` indicates a trigger call, which must force setup through jQuery.event.add
	if ( !isSetup ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				if ( !saved ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					this[ type ]();
					result = dataPriv.get( this, type );
					dataPriv.set( this, type, false );

					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						return result;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering
				// the native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved ) {

				// ...and capture the result
				dataPriv.set( this, type, jQuery.event.trigger(
					saved[ 0 ],
					saved.slice( 1 ),
					this
				) );

				// Abort handling of the native event by all jQuery handlers while allowing
				// native handlers on the same element to run. On target, this is achieved
				// by stopping immediate propagation just on the jQuery event. However,
				// the native event is re-wrapped by a jQuery one on each level of the
				// propagation so the only way to stop it for jQuery is to stop it for
				// everyone via native `stopPropagation()`. This is not a problem for
				// focus/blur which don't bubble, but it does also stop click on checkboxes
				// and radios. We accept this limitation.
				event.stopPropagation();
				event.isImmediatePropagationStopped = returnTrue;
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (trac-504, trac-13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {

	function focusMappedHandler( nativeEvent ) {
		if ( document.documentMode ) {

			// Support: IE 11+
			// Attach a single focusin/focusout handler on the document while someone wants
			// focus/blur. This is because the former are synchronous in IE while the latter
			// are async. In other browsers, all those handlers are invoked synchronously.

			// `handle` from private data would already wrap the event, but we need
			// to change the `type` here.
			var handle = dataPriv.get( this, "handle" ),
				event = jQuery.event.fix( nativeEvent );
			event.type = nativeEvent.type === "focusin" ? "focus" : "blur";
			event.isSimulated = true;

			// First, handle focusin/focusout
			handle( nativeEvent );

			// ...then, handle focus/blur
			//
			// focus/blur don't bubble while focusin/focusout do; simulate the former by only
			// invoking the handler at the lower level.
			if ( event.target === event.currentTarget ) {

				// The setup part calls `leverageNative`, which, in turn, calls
				// `jQuery.event.add`, so event handle will already have been set
				// by this point.
				handle( event );
			}
		} else {

			// For non-IE browsers, attach a single capturing handler on the document
			// while someone wants focusin/focusout.
			jQuery.event.simulate( delegateType, nativeEvent.target,
				jQuery.event.fix( nativeEvent ) );
		}
	}

	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			var attaches;

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, true );

			if ( document.documentMode ) {

				// Support: IE 9 - 11+
				// We use the same native handler for focusin & focus (and focusout & blur)
				// so we need to coordinate setup & teardown parts between those events.
				// Use `delegateType` as the key as `type` is already used by `leverageNative`.
				attaches = dataPriv.get( this, delegateType );
				if ( !attaches ) {
					this.addEventListener( delegateType, focusMappedHandler );
				}
				dataPriv.set( this, delegateType, ( attaches || 0 ) + 1 );
			} else {

				// Return false to allow normal processing in the caller
				return false;
			}
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		teardown: function() {
			var attaches;

			if ( document.documentMode ) {
				attaches = dataPriv.get( this, delegateType ) - 1;
				if ( !attaches ) {
					this.removeEventListener( delegateType, focusMappedHandler );
					dataPriv.remove( this, delegateType );
				} else {
					dataPriv.set( this, delegateType, attaches );
				}
			} else {

				// Return false to indicate standard teardown should be applied
				return false;
			}
		},

		// Suppress native focus or blur if we're currently inside
		// a leveraged native-event stack
		_default: function( event ) {
			return dataPriv.get( event.target, type );
		},

		delegateType: delegateType
	};

	// Support: Firefox <=44
	// Firefox doesn't have focus(in | out) events
	// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
	//
	// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
	// focus(in | out) events fire after focus & blur events,
	// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
	// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
	//
	// Support: IE 9 - 11+
	// To preserve relative focusin/focus & focusout/blur event order guaranteed on the 3.x branch,
	// attach a single handler for both events in IE.
	jQuery.event.special[ delegateType ] = {
		setup: function() {

			// Handle: regular nodes (via `this.ownerDocument`), window
			// (via `this.document`) & document (via `this`).
			var doc = this.ownerDocument || this.document || this,
				dataHolder = document.documentMode ? this : doc,
				attaches = dataPriv.get( dataHolder, delegateType );

			// Support: IE 9 - 11+
			// We use the same native handler for focusin & focus (and focusout & blur)
			// so we need to coordinate setup & teardown parts between those events.
			// Use `delegateType` as the key as `type` is already used by `leverageNative`.
			if ( !attaches ) {
				if ( document.documentMode ) {
					this.addEventListener( delegateType, focusMappedHandler );
				} else {
					doc.addEventListener( type, focusMappedHandler, true );
				}
			}
			dataPriv.set( dataHolder, delegateType, ( attaches || 0 ) + 1 );
		},
		teardown: function() {
			var doc = this.ownerDocument || this.document || this,
				dataHolder = document.documentMode ? this : doc,
				attaches = dataPriv.get( dataHolder, delegateType ) - 1;

			if ( !attaches ) {
				if ( document.documentMode ) {
					this.removeEventListener( delegateType, focusMappedHandler );
				} else {
					doc.removeEventListener( type, focusMappedHandler, true );
				}
				dataPriv.remove( dataHolder, delegateType );
			} else {
				dataPriv.set( dataHolder, delegateType, attaches );
			}
		}
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,

	rcleanScript = /^\s*<!\[CDATA\[|\]\]>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (trac-8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Re-enable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {

							// Unwrap a CDATA section containing script contents. This shouldn't be
							// needed as in XML documents they're already not visible when
							// inspecting element contents and in HTML documents they have no
							// meaning but we're preserving that logic for backwards compatibility.
							// This will be removed completely in 4.0. See gh-4904.
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew jQuery#find here for performance reasons:
			// https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var rcustomProp = /^--/;


var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (trac-8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "box-sizing:content-box;border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is `display: block`
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		isCustomProp = rcustomProp.test( name ),

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, trac-12537)
	//   .css('--customProperty) (gh-3144)
	if ( computed ) {

		// Support: IE <=9 - 11+
		// IE only supports `"float"` in `getPropertyValue`; in computed styles
		// it's only available as `"cssFloat"`. We no longer modify properties
		// sent to `.css()` apart from camelCasing, so we need to check both.
		// Normally, this would create difference in behavior: if
		// `getPropertyValue` returns an empty string, the value returned
		// by `.css()` would be `undefined`. This is usually the case for
		// disconnected elements. However, in IE even disconnected elements
		// with no styles return `"none"` for `getPropertyValue( "float" )`
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( isCustomProp && ret ) {

			// Support: Firefox 105+, Chrome <=105+
			// Spec requires trimming whitespace for custom properties (gh-4926).
			// Firefox only trims leading whitespace. Chrome just collapses
			// both leading & trailing whitespace to a single space.
			//
			// Fall back to `undefined` if empty string returned.
			// This collapses a missing definition with property defined
			// and set to an empty string but there's no standard API
			// allowing us to differentiate them without a performance penalty
			// and returning `undefined` aligns with older jQuery.
			//
			// rtrimCSS treats U+000D CARRIAGE RETURN and U+000C FORM FEED
			// as whitespace while CSS does not, but this is not a problem
			// because CSS preprocessing replaces them with U+000A LINE FEED
			// (which *is* CSS whitespace)
			// https://www.w3.org/TR/css-syntax-3/#input-preprocessing
			ret = ret.replace( rtrimCSS, "$1" ) || undefined;
		}

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0,
		marginDelta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		// Count margin delta separately to only add it after scroll gutter adjustment.
		// This is needed to make negative margins work with `outerHeight( true )` (gh-3982).
		if ( box === "margin" ) {
			marginDelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta + marginDelta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		animationIterationCount: true,
		aspectRatio: true,
		borderImageSlice: true,
		columnCount: true,
		flexGrow: true,
		flexShrink: true,
		fontWeight: true,
		gridArea: true,
		gridColumn: true,
		gridColumnEnd: true,
		gridColumnStart: true,
		gridRow: true,
		gridRowEnd: true,
		gridRowStart: true,
		lineHeight: true,
		opacity: true,
		order: true,
		orphans: true,
		scale: true,
		widows: true,
		zIndex: true,
		zoom: true,

		// SVG-related
		fillOpacity: true,
		floodOpacity: true,
		stopOpacity: true,
		strokeMiterlimit: true,
		strokeOpacity: true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (trac-7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug trac-9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (trac-7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// Use proper attribute retrieval (trac-12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classNames, cur, curValue, className, i, finalValue;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classNames = classesToArray( value );

		if ( classNames.length ) {
			return this.each( function() {
				curValue = getClass( this );
				cur = this.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					for ( i = 0; i < classNames.length; i++ ) {
						className = classNames[ i ];
						if ( cur.indexOf( " " + className + " " ) < 0 ) {
							cur += className + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						this.setAttribute( "class", finalValue );
					}
				}
			} );
		}

		return this;
	},

	removeClass: function( value ) {
		var classNames, cur, curValue, className, i, finalValue;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classNames = classesToArray( value );

		if ( classNames.length ) {
			return this.each( function() {
				curValue = getClass( this );

				// This expression is here for better compressibility (see addClass)
				cur = this.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					for ( i = 0; i < classNames.length; i++ ) {
						className = classNames[ i ];

						// Remove *all* instances
						while ( cur.indexOf( " " + className + " " ) > -1 ) {
							cur = cur.replace( " " + className + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						this.setAttribute( "class", finalValue );
					}
				}
			} );
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var classNames, className, i, self,
			type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		classNames = classesToArray( value );

		return this.each( function() {
			if ( isValidValue ) {

				// Toggle individual class names
				self = jQuery( this );

				for ( i = 0; i < classNames.length; i++ ) {
					className = classNames[ i ];

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (trac-14686, trac-14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (trac-2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (trac-9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (trac-6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// trac-7653, trac-8125, trac-8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes trac-9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (trac-10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket trac-12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// trac-9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (trac-11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// trac-1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see trac-8605, trac-14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// trac-14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this
			.on( "mouseenter", fnOver )
			.on( "mouseleave", fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
// Require that the "whitespace run" starts from a non-whitespace
// to avoid O(N^2) behavior when the engine would try matching "\s+$" at each space position.
var rtrim = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "$1" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (trac-13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );
]]></CSP>


<CSP name="searchtableAdd.csp" application="/csp/user/" default="1"><![CDATA[
<html>

<head>
    <STYLE type="text/css">
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #1a2a6c 0%, #2a5298 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            color: #333;
        }

        .container {
            background-color: white;
            border-radius: 16px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
            width: 100%;
            max-width: 1200px;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            height: 95vh;
        }

        .header {
            background: linear-gradient(to right, #1a2a6c, #2a5298);
            color: white;
            padding: 25px 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.4rem;
            margin-bottom: 5px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 12px;
        }

        .header p {
            opacity: 0.9;
            font-size: 1.1rem;
        }

        .content {
            padding: 25px;
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .main-content {
            display: flex;
            gap: 25px;
            flex: 1;
            overflow: hidden;
        }

        .form-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .form-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .form-header h2 {
            color: #1a2a6c;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .input-rows-container {
            flex: 1;
            overflow-y: auto;
            padding: 5px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            background: #f8f9ff;
            margin-bottom: 20px;
        }

        .input-row {
            display: flex;
            flex-direction: column;
            gap: 0;
            margin-bottom: 15px;
            border-radius: 10px;
            overflow: hidden;
            border: 1px solid #e0e0e0;
            transition: all 0.3s ease;
            animation: fadeIn 0.3s ease-out;
            background: white;
        }

        .input-row.active {
            border-color: #1a2a6c;
            box-shadow: 0 0 0 2px rgba(26, 42, 108, 0.3);
        }

        .row-header {
            display: flex;
            gap: 15px;
            padding: 15px;
            align-items: center;
            cursor: pointer;
            background: #fff;
            transition: background 0.2s;
        }

        .row-header:hover {
            background: #f8f9ff;
        }

        .row-header .toggle-icon {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: transform 0.3s ease;
        }

        .input-row.active .toggle-icon {
            transform: rotate(180deg);
        }

        .input-group {
            position: relative;
        }

        .input-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #444;
            font-size: 0.9rem;
        }

        .input-group input,
        .input-group select {
            width: 100%;
            padding: 12px 14px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 0.95rem;
            transition: all 0.3s ease;
        }

        .input-group input:focus,
        .input-group select:focus {
            border-color: #1a2a6c;
            outline: none;
            box-shadow: 0 0 0 3px rgba(26, 42, 108, 0.2);
        }

        .input-fields {
            display: flex;
            gap: 15px;
            width: 100%;
        }

        .node-name {
            flex: 1;
        }

        .node-type {
            flex: 1;
        }

        .node-path {
            flex: 2;
        }

        .delete-btn {
            background: linear-gradient(to right, #ff416c, #ff4b2b);
            color: white;
            border: none;
            border-radius: 8px;
            width: 45px;
            height: 45px;
            font-size: 1.2rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px rgba(255, 65, 108, 0.3);
            flex-shrink: 0;
        }

        .delete-btn:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 12px rgba(255, 65, 108, 0.4);
        }

        .collapse-content {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.4s ease-out;
            background: #f8f9ff;
            border-top: 1px solid #e0e0e0;
        }

        .collapse-content-inner {
            padding: 20px;
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .data-editor-section {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .data-editor-section h3 {
            color: #1a2a6c;
            margin-bottom: 5px;
            font-size: 1.1rem;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .data-textarea {
            width: 100%;
            min-height: 150px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-family: monospace;
            font-size: 14px;
            resize: vertical;
        }

        .data-textarea:focus {
            outline: none;
            border-color: #1a2a6c;
            box-shadow: 0 0 0 3px rgba(26, 42, 108, 0.2);
        }

        .validation-result {
            padding: 12px 15px;
            border-radius: 8px;
            font-weight: 500;
            display: none;
        }

        .validation-result.success {
            background: #e6f7ee;
            color: #0f9d58;
            border: 1px solid #a5d6c3;
            display: block;
        }

        .validation-result.error {
            background: #fce8e6;
            color: #d93025;
            border: 1px solid #f4c7c3;
            display: block;
        }

        .data-viewer {
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 15px;
            background: #f8f9ff;
            min-height: 200px;
            max-height: 300px;
            overflow: auto;
            font-family: monospace;
            font-size: 14px;
            position: relative;
        }

        .data-viewer .node {
            cursor: pointer;
            transition: all 0.2s;
            padding: 2px 4px;
            border-radius: 3px;
            margin: 1px 0;
        }

        .data-viewer .node:hover {
            background: rgba(26, 42, 108, 0.1);
        }

        .data-viewer .node.selected {
            background: rgba(26, 42, 108, 0.2);
            font-weight: bold;
        }

        .data-viewer .tag {
            color: #1a2a6c;
            font-weight: bold;
        }

        .data-viewer .attr {
            color: #d93025;
        }

        .data-viewer .attr-value {
            color: #0f9d58;
        }

        .json-key {
            color: #1a2a6c;
            font-weight: bold;
        }

        .json-string {
            color: #0f9d58;
        }

        .json-number {
            color: #d35400;
        }

        .json-boolean {
            color: #8e44ad;
        }

        .json-null {
            color: #7f8c8d;
        }

        .actions {
            display: flex;
            justify-content: space-between;
            gap: 15px;
            margin-top: 15px;
        }

        .btn {
            padding: 14px 28px;
            border: none;
            border-radius: 10px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .btn-primary {
            background: linear-gradient(to right, #1a2a6c, #2a5298);
            color: white;
            box-shadow: 0 4px 12px rgba(26, 42, 108, 0.4);
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 7px 15px rgba(26, 42, 108, 0.5);
        }

        .btn-secondary {
            background-color: #f0f0f0;
            color: #555;
        }

        .btn-secondary:hover {
            background-color: #e0e0e0;
        }

        .counter {
	        display:none;
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 15px 20px;
            text-align: center;
            margin-top: 25px;
            border: 1px solid #eee;
            font-weight: 600;
            color: #1a2a6c;
           
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .footer {
            text-align: center;
            padding: 20px;
            color: #777;
            font-size: 0.9rem;
            border-top: 1px solid #eee;
        }

        .instructions {
            background-color: #f8f9ff;
            border-radius: 10px;
            padding: 20px;
            margin-top: 25px;
            border-left: 4px solid #1a2a6c;
        }

        .instructions h3 {
            color: #1a2a6c;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .instructions ul {
            padding-left: 20px;
        }

        .instructions li {
            margin-bottom: 8px;
            line-height: 1.5;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @media (max-width: 992px) {
            .main-content {
                flex-direction: column;
            }

            .input-fields {
                flex-wrap: wrap;
            }

            .node-name,
            .node-type {
                flex: 1 0 40%;
            }

            .node-path {
                flex: 1 0 100%;
            }
        }

        @media (max-width: 768px) {
            .row-header {
                flex-wrap: wrap;
            }

            .input-fields {
                flex-direction: column;
                gap: 10px;
            }

            .delete-btn {
                width: 100%;
                margin-top: 10px;
                height: 40px;
            }

            .actions {
                flex-direction: column;
            }
        }
    </STYLE>
    <!-- Put your page Title here -->
    <title> Cache Server Page </title>
    <link rel="stylesheet" href="all.min.css">
</head>

<body>
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-sitemap"></i>Creat SearchTable</h1>

        </div>

        <div class="content">
            <div class="form-container">
                <div class="form-header" style="
    flex-direction: column;
    align-items: flex-start;
">
                    <h2><i class="fas fa-list"></i></h2>
                    <div class="actions" style="width: 100%;">
                        <div class="input-fields">
                            <div class="input-group node-name">
                                <label for="searchTableName">searchTableName</label>
                                <input type="text" id="searchTableName" placeholder="searchTableName">
                            </div>
                            <div class="input-group node-type">
                                <label for="messageType">message Class</label>
                                <select id="messageType" class="format-selector">

                                </select>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="form-header">
                    <h2><i class="fas fa-list"></i> Item</h2>
                    <div class="actions">
                        <button class="btn btn-primary" id="addBtn">
                            <i class="fas fa-plus"></i> Add
                        </button>
                    </div>
                </div>

                <div class="input-rows-container" id="formContainer">
                    <!-- ??????????? -->
                </div>

                <div class="counter" >
                    <i class="fas fa-list"></i>
                    <span id="rowCount">0</span> ?????
                </div>
                <div class="actions" style="display:flex;width:100%;flex-direction:row-reverse">

                    <button class="btn btn-primary" id="Submit">
                        <i class="fas fa-plus"></i> Submit
                    </button>

                </div>
            </div>


        </div>

        <div class="footer">

        </div>
    </div>
    <script src="jquery-3.7.1.js"></script>
    <script language=javaScript>


        document.addEventListener('DOMContentLoaded', function () {
            const formContainer = document.getElementById('formContainer');
            const addBtn = document.getElementById('addBtn');
            const rowCountElement = document.getElementById('rowCount');
            const submitbtn = document.getElementById('Submit');
            let rowCount = 0;
            const maxRows = 15;
            let activeRow = null;
            let currentData = null;
            let currentDataType = null;
            let Property = []
            let category = 'xml'
            let strArr=["",""]
            let strOb={}
            
            function addInputRow() {
                if (rowCount >= maxRows) {
                    alert(`?????? ${maxRows} ?????`);
                    return;
                }

              
                rowCount++;
                  if (category=="xml"){
                        strArr[rowCount]=strArr[rowCount-1]     
	              }
                rowCountElement.textContent = rowCount;

                const row = document.createElement('div');
                var temp = `</div>
                              
                            <div class="input-group node-type" style="display:none">
                                <label for="nodeType${rowCount}">xpath</label>
                                <select id="nodeType${rowCount}" class="format-selector">
                                    <option value="xml" selected>XML String</option>
                                    <option value="json">JSON String</option>
                                </select>
                            </div>
                            
                            `
                if (category != 'xml') {
                    console.log(Property)
                    var optionhtml = ''
                    var j = 0
                           optionhtml = optionhtml + '  <option value="' + Property[j].Value + '" selected>' + Property[j].Value + '</option>'
                   
                    for (j = 1; j < Property.length; j++) {
                        optionhtml = optionhtml + '  <option value="' + Property[j].Value + '" >' + Property[j].Value + '</option>'
                    }



                    var temp = `</div>
                               <div class="input-group node-name">
                                <label for="msgtypeP${rowCount}">Property</label>
                               <select id="msgtypeP${rowCount}" class="format-selector">
                                   `+ optionhtml + `
                                </select>
                            </div>
                            <div class="input-group node-type">
                                <label for="nodeType${rowCount}">node type</label>
                                <select id="nodeType${rowCount}" class="format-selector">
                                    <option value="xml" selected>XML String</option>
                                    <option value="json">JSON String</option>
                                </select>
                            </div>
                            
                            `
                }
                row.className = 'input-row';
                row.dataset.id = rowCount;
               
                if (category=="xml"){
                        var strA= strArr[rowCount]
	              }else{
		              
		               var strA= strOb[Property[0].Value]
		             }

                row.innerHTML = `
                    <div class="row-header">
                        <div class="toggle-icon">
                            <i class="fas fa-chevron-down"></i>
                        </div>
                        <div class="input-fields">
                            <div class="input-group node-name">
                                <label for="nodeName${rowCount}">node Name</label>
                                <input type="text" id="nodeName${rowCount}" placeholder="node Name">
                          `+ temp + `
                            
                            <div class="input-group node-path">
                                <label for="path${rowCount}">node path</label>
                                <input type="text" id="path${rowCount}" placeholder="node path" >
                            </div>
                        </div>
                        <button class="delete-btn" type="button">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                    <div class="collapse-content">
                        <div class="collapse-content-inner" style='flex-direction: row'>
                            <div style="width:50%">
                            <div class="data-editor-section">
                                <h3><i class="fas fa-code"></i> data-editor</h3>
                                <textarea class="data-textarea" id="dataInput${rowCount}" placeholder=""> ` +strA+`</textarea>
                                <div class="actions">
                                    <button class="btn btn-primary validate-btn" data-row="${rowCount}">
                                        <i class="fas fa-check-circle"></i> validate
                                    </button>
                                </div>
                                <div id="validationResult${rowCount}" class="validation-result"></div>
                            </div>
                            </div>
                             <div style="width:50%">
                            <div class="data-editor-section">
                                <h3><i class="fas fa-eye"></i> data-viewer</h3>
                                <div class="data-viewer" id="dataViewer${rowCount}">
                                    <!-- ?????????? -->
                                    <div class="placeholder"></div>
                                </div>
                            </div>
                        </div>
                        </div>
                    </div>
                `;

                formContainer.appendChild(row);


                const deleteBtn = row.querySelector('.delete-btn');
                deleteBtn.addEventListener('click', function (e) {
                    e.stopPropagation();
                    row.remove();
                    rowCount--;
                    rowCountElement.textContent = rowCount;
                });


                const msgtypePbtn = row.querySelector('.format-selector');
                msgtypePbtn.addEventListener('change', function (e) {
                    e.stopPropagation();
                    console.log(msgtypePbtn.value)
                    console.log(row.querySelector('.data-textarea').value)
                    if (strOb[msgtypePbtn.value]==undefined){
                       row.querySelector('.data-textarea').value=""
                    }
                });  

                const rowHeader = row.querySelector('.row-header');
                rowHeader.addEventListener('click', function () {

                    if (activeRow && activeRow !== row) {
                        activeRow.classList.remove('active');
                        activeRow.querySelector('.collapse-content').style.maxHeight = null;
                    }

                    // ?????
                    row.classList.toggle('active');
                    const content = row.querySelector('.collapse-content');
                    if (content.style.maxHeight) {
                        content.style.maxHeight = null;
                        activeRow = null;
                    } else {
                        content.style.maxHeight = content.scrollHeight + "px";
                        activeRow = row;
                    }
                });

              
                const validateBtn = row.querySelector('.validate-btn');
                validateBtn.addEventListener('click', function () {
                    const rowId = this.dataset.row;
                    validateData(rowId);
                });

              
                const formatSelector = row.querySelector('.format-selector');
                formatSelector.addEventListener('change', function () {
                    const rowId = row.dataset.id;
                    const dataViewer = document.getElementById(`dataViewer${rowId}`);
                    dataViewer.innerHTML = '<div class="placeholder">-----------</div>';
                    document.getElementById(`path${rowId}`).value = '';
                });
            }

            // ??????
            function validateData(rowId) {
                const dataInput = document.getElementById(`dataInput${rowId}`);
                const validationResult = document.getElementById(`validationResult${rowId}`);
                const dataViewer = document.getElementById(`dataViewer${rowId}`);
                const formatSelector = document.querySelector(`#nodeType${rowId}`);
                const format = formatSelector.value;

                const dataString = dataInput.value;
                {
	                if (category=="xml"){
		                console.log(rowId+"xml---------")
		                var idd=parseInt(rowId)
		                console.log(idd)
                        strArr[idd]=dataInput.value
                         strArr[idd+1]=dataInput.value
                           console.log(strArr)
	                }else{
		                 strOb[$('#msgtypeP'+rowId).val()]=dataInput.value
		                   console.log(strOb)
		             }
                }
                if (!dataString.trim()) {
                    validationResult.className = 'validation-result error';
                    validationResult.innerHTML = '<i class="fas fa-exclamation-circle"></i> ?????????';
                    return;
                }

                try {
                    if (format === 'xml') {
                        validateXml(dataString, rowId);
                    } else {
                        validateJson(dataString, rowId);
                    }
                } catch (e) {
                    validationResult.className = 'validation-result error';
                    validationResult.innerHTML = `<i class="fas fa-exclamation-circle"></i> ??: ${e.message}`;
                    dataViewer.innerHTML = '<div class="error">????????</div>';
                }
            }

            // XML????
            function validateXml(xmlString, rowId) {
                const validationResult = document.getElementById(`validationResult${rowId}`);
                const dataViewer = document.getElementById(`dataViewer${rowId}`);

                const parser = new DOMParser();
                const xmlDoc = parser.parseFromString(xmlString, "text/xml");

                // ?????????
                const parserError = xmlDoc.getElementsByTagName("parsererror");
                if (parserError.length > 0) {
                    validationResult.className = 'validation-result error';
                    validationResult.innerHTML = `<i class="fas fa-exclamation-circle"></i> XML????: ${parserError[0].textContent}`;
                    dataViewer.innerHTML = '<div class="error">XML??????????</div>';
                    return;
                }

                // ??????
                currentData = xmlDoc;
                currentDataType = 'xml';

                // ??????
                validationResult.className = 'validation-result success';
                validationResult.innerHTML = '<i class="fas fa-check-circle"></i> XML???????';

                // ??XML???
                renderXmlViewer(xmlDoc, rowId);
            }

            // JSON????
            function validateJson(jsonString, rowId) {
                const validationResult = document.getElementById(`validationResult${rowId}`);
                const dataViewer = document.getElementById(`dataViewer${rowId}`);

                const jsonObj = JSON.parse(jsonString);

                // ??????
                currentData = jsonObj;
                currentDataType = 'json';

                // ??????
                validationResult.className = 'validation-result success';
                validationResult.innerHTML = '<i class="fas fa-check-circle"></i> JSON???????';

                // ??JSON???
                renderJsonViewer(jsonObj, rowId);
            }

            // ??XML???
            function renderXmlViewer(xmlDoc, rowId) {
                const dataViewer = document.getElementById(`dataViewer${rowId}`);
                dataViewer.innerHTML = '';

         
                function renderNode(node, level = 0) {
                    if (node.nodeType === Node.ELEMENT_NODE) {
                        const element = document.createElement('div');
                        element.className = 'node';
                        element.dataset.path = getXPath(node);

                   
                        const indent = '&nbsp;&nbsp;'.repeat(level);
                        element.innerHTML = `${indent}<span class="tag">&lt;${node.nodeName}</span>`;

                    
                        if (node.attributes.length > 0) {
                            for (let i = 0; i < node.attributes.length; i++) {
                                const attr = node.attributes[i];
                                element.innerHTML += ` <span class="attr">${attr.name}</span>="<span class="attr-value">${attr.value}</span>"`;
                            }
                        }

                        element.innerHTML += '<span class="tag">&gt;</span>';

                        // ??????
                        element.addEventListener('click', function (e) {
                            e.stopPropagation();
                            handleNodeClick(this, rowId);
                        });

                        dataViewer.appendChild(element);

                        // ?????
                        for (let i = 0; i < node.childNodes.length; i++) {
                            renderNode(node.childNodes[i], level + 1);
                        }

                        // ??????
                        const endTag = document.createElement('div');
                        endTag.className = 'node';
                        endTag.innerHTML = `${indent}<span class="tag">&lt;/${node.nodeName}&gt;</span>`;
                        dataViewer.appendChild(endTag);
                    } else if (node.nodeType === Node.TEXT_NODE && node.textContent.trim() !== '') {
                        const textNode = document.createElement('div');
                        textNode.className = 'node';

                        // ??
                        const indent = '&nbsp;&nbsp;'.repeat(level);
                        textNode.innerHTML = `${indent}<span>${node.textContent.trim()}</span>`;

                        dataViewer.appendChild(textNode);
                    }
                }

                // ????????
                renderNode(xmlDoc.documentElement);
            }

            // ??JSON???
            function renderJsonViewer(jsonObj, rowId) {
                const dataViewer = document.getElementById(`dataViewer${rowId}`);
                dataViewer.innerHTML = '';

                // ????JSON??
                function renderJson(data, path = '', level = 0) {
                    const indent = '&nbsp;&nbsp;'.repeat(level);

                    if (typeof data === 'object' && data !== null) {
                        if (Array.isArray(data)) {
                            const container = document.createElement('div');
                            container.innerHTML = `${indent}<span class="tag">[</span>`;
                            dataViewer.appendChild(container);

                            data.forEach((item, index) => {
                                const newPath = path ? `${path}.${index}` : `.${index}`;
                                const itemElement = document.createElement('div');
                                itemElement.className = 'node';
                                itemElement.dataset.path = newPath;
                                itemElement.style.marginLeft = `${level * 15}px`;

                                renderJson(item, newPath, level + 1);

                                // ??????
                                itemElement.addEventListener('click', function (e) {
                                    e.stopPropagation();
                                    handleNodeClick(this, rowId);
                                });
                            });

                            const endContainer = document.createElement('div');
                            endContainer.innerHTML = `${indent}<span class="tag">]</span>`;
                            dataViewer.appendChild(endContainer);
                        } else {
                            const container = document.createElement('div');
                            container.innerHTML = `${indent}<span class="tag">{</span>`;
                            dataViewer.appendChild(container);

                            Object.keys(data).forEach(key => {
                                const newPath = path ? `${path}.${key}` : key;
                                const keyElement = document.createElement('div');
                                keyElement.className = 'node';
                                keyElement.dataset.path = newPath;
                                keyElement.style.marginLeft = `${level * 15}px`;
                                keyElement.innerHTML = `${indent}&nbsp;&nbsp;<span class="json-key">"${key}"</span>: `;

                                const value = data[key];
                                if (typeof value === 'object' && value !== null) {
                                    dataViewer.appendChild(keyElement);
                                    renderJson(value, newPath, level + 1);
                                } else {
                                    let valueHtml;
                                    if (typeof value === 'string') {
                                        valueHtml = `<span class="json-string">"${value}"</span>`;
                                    } else if (typeof value === 'number') {
                                        valueHtml = `<span class="json-number">${value}</span>`;
                                    } else if (typeof value === 'boolean') {
                                        valueHtml = `<span class="json-boolean">${value}</span>`;
                                    } else if (value === null) {
                                        valueHtml = `<span class="json-null">null</span>`;
                                    }

                                    keyElement.innerHTML += valueHtml;
                                    dataViewer.appendChild(keyElement);
                                }

                                // ??????
                                keyElement.addEventListener('click', function (e) {
                                    e.stopPropagation();
                                    handleNodeClick(this, rowId);
                                });
                            });

                            const endContainer = document.createElement('div');
                            endContainer.innerHTML = `${indent}<span class="tag">}</span>`;
                            dataViewer.appendChild(endContainer);
                        }
                    }
                }

                // ????
                renderJson(jsonObj);
            }

            // ????????
            function handleNodeClick(element, rowId) {
                // ???????
                document.querySelectorAll('.node.selected').forEach(el => {
                    el.classList.remove('selected');
                });

                // ??????
                element.classList.add('selected');

                // ???????????
                const path = element.dataset.path;
                document.getElementById(`path${rowId}`).value = path;

                // ??????????
                const nodeNameInput = document.getElementById(`nodeName${rowId}`);
                const formatSelector = document.querySelector(`#nodeType${rowId}`);

                if (formatSelector.value === 'xml') {
                    // ??XML????????
                    const pathParts = path.split('/');
                    const nodeName = pathParts[pathParts.length - 1].replace(/\[\d+\]/g, '');
                    nodeNameInput.value = nodeName;
                } else {
                    // ??JSON???????????
                    const pathParts = path.split('.');
                    const lastPart = pathParts[pathParts.length - 1];
                    const keyName = lastPart.replace(/\[\d+\]/g, '');
                    nodeNameInput.value = keyName;
                }

                nodeNameInput.focus();
            }

            // ??XML???XPath
            function getXPath(node) {
                if (node.nodeType !== Node.ELEMENT_NODE) {
                    return '';
                }

                let path = '';
                for (; node && node.nodeType === Node.ELEMENT_NODE; node = node.parentNode) {
                    let index = 0;
                    for (let sibling = node.previousSibling; sibling; sibling = sibling.previousSibling) {
                        if (sibling.nodeType === Node.ELEMENT_NODE && sibling.nodeName === node.nodeName) {
                            index++;
                        }
                    }

                    const tagName = node.nodeName.toLowerCase();
                    const pathIndex = (index ? '[' + (index + 1) + ']' : '');
                    path = '/' + tagName + pathIndex + path;
                }

                return path;
            }

            // ?????
            // addInputRow();
            function changeMsgType() {


                 

                  strArr=[]
                const formContainer = document.getElementById('formContainer');
                //const parent = document.getElementById("parentElement");
                while (formContainer.hasChildNodes()) {
                    formContainer.removeChild(formContainer.firstChild);
                }
                if (document.getElementById("messageType").value != 'xml') {


                }

                const select = document.getElementById("messageType")
                const selectedOption = select.options[select.selectedIndex];

                // ??value???
                const value = selectedOption.value;
                category = selectedOption.dataset.category; // ?data-category????

                console.log(category)
                var url = "http://192.168.61.128:52773/SearchTable/GetProperty/" + value
                //let that=this
                if (category == 'other') {
                    $.ajax({
                        type: "Get",
                        url: url,
                        async: true,
                        dataType: "json",
                        success: function (res) {
                            Property = res


                        }
                    })


                    //  addInputRow();





                }


                // ????



                // const formContainer = document.getElementById('formContainer');


                rowCount = 0
                //const parent = document.getElementById("parentElement");
                while (formContainer.hasChildNodes()) {

                    formContainer.removeChild(formContainer.firstChild);
                }
                if (document.getElementById("messageType").value != 'xml') {


                }
                //addInputRow();
            }
            messageType.addEventListener('change', changeMsgType)
            function submitSearchtable() {

                console.log($('#searchTableName').val())
                console.log($('#messageType').val())

               var input={}
               input.name=$('#searchTableName').val()
               input.messageType=$('#messageType').val()
               input.Type=category
               input.Content=[]
               var test={}
                 if (category != "xml") { 
               
                var i = 0
                for (i = 1; i < rowCount + 1; i++) {
	                var temp={}
	                temp.name=$('#nodeName' + i).val()
	                temp.path=$('#path' + i).val()
                    temp.nodeType=$('#nodeType' + i).val()
	               
	                if (!Object.prototype.hasOwnProperty.call(test, $('#msgtypeP' + i).val()))
	                {
		                 test[$('#msgtypeP' + i).val()]=[]
		            }
	               
                    test[$('#msgtypeP' + i).val()].push(temp)
                    
                   
                     

                }
                 input.Content=test
                }else{
	                 var i = 0
                for (i = 1; i < rowCount + 1; i++) {
	                var temp={}
	                temp.name=$('#nodeName' + i).val()
	                temp.path=$('#path' + i).val()
	                 input.Content.push(temp)  
                    }
	                    
	                     
	              }
	               console.log("xxxxxx")
                 $.ajax({
                    type: "POST",
                    url: "http://192.168.61.128:52773/SearchTable/AddSearchTableM",                 //??
                    async: true,
                    data: JSON.stringify(input),
                    dataType: "json",
                    success: function (res) {
	                     console.log("xxxxxx123")
                         var r=confirm(res.return);
                       
                    },
                    error: function(xhr, status, error) {
	                          console.log(error)
    // ????
  }
                })

            }

            submitbtn.addEventListener('click', submitSearchtable)//
            function test() {
                const select = document.getElementById('messageType');


                $.ajax({
                    type: "Get",
                    url: "http://192.168.61.128:52773/SearchTable/GetMsgClass",                 //??
                    async: true,
                    dataType: "json",
                    success: function (res) {

                        var i = 0
                        var htmlstr = '<optgroup label="Vdoc"><option selected value="' + res.Vdoc[i].Value + '" selected="" data-category="' + res.Vdoc[i].Type + '" >' + res.Vdoc[i].Value + '</option>'//'<optgroup label="other">'
                        for (i = 1; i < res.Vdoc.length; i++) {

                            htmlstr = htmlstr + '<option value="' + res.Vdoc[i].Value + '"data-category="' + res.Vdoc[i].Type + '" >' + res.Vdoc[i].Value + '</option>'
                        }
                        htmlstr = htmlstr + '</optgroup><optgroup label="Body">'

                        for (i = 0; i < res.Body.length; i++) {

                            htmlstr = htmlstr + '<option value="' + res.Body[i].Value + '" data-category="' + res.Body[i].Type + '" >' + res.Body[i].Value + '</option>'
                        }
                        htmlstr = htmlstr + '</optgroup>'
                        select.innerHTML = htmlstr // htmlstr+'</optgroup>'
                        addBtn.addEventListener('click', addInputRow);
                        addInputRow()
                    }
                })


            }
            test()
        });

    </script>


</body>

</html>]]></CSP>
</Export>
